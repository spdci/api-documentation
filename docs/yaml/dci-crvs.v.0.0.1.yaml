openapi: 3.0.3
info:
  title: CRVS interoperability APIs
  description: ''
  version: 0.0.1
servers:
  # Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/ahi-dev-dc/APIDoc/0.0.1
  - description: Gateway endpoint
    url: https://localhost:8081/
paths:
  /crvs/isAlive:
    post:
      tags:
        - CRVS APIs
      summary: 'API to check if a person is alive or not based on ID'
      description: '' 
      parameters:
        - $ref: "#/components/parameters/version"
        - $ref: "#/components/parameters/x-hmac"
        - $ref: "#/components/parameters/authorization"
        - $ref: '#/components/parameters/x-registry-type'
        - $ref: '#/components/parameters/x-message-id'
        - $ref: '#/components/parameters/x-timestamp'
        - $ref: '#/components/parameters/x-sender-id'
        - $ref: '#/components/parameters/x-async'
        - $ref: '#/components/parameters/x-callbackendpoint'
      requestBody:
        description: Request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IsAliveCheckRequest'     
        required: true
      responses:
        '102':
          description: Processing 
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IsAliveCheckResponse'          
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '500':
          $ref: '#/components/responses/500' 
      security:
        - spmis_auth:
            - read:search
  /crvs/getAge:
    post:
      tags:
        - CRVS APIs
      summary: 'API to retrieve the age of a person based on ID'
      description: '' 
      parameters:
        - $ref: "#/components/parameters/version"
        - $ref: "#/components/parameters/x-hmac"
        - $ref: "#/components/parameters/authorization"
        - $ref: '#/components/parameters/x-registry-type'
        - $ref: '#/components/parameters/x-message-id'
        - $ref: '#/components/parameters/x-timestamp'
        - $ref: '#/components/parameters/x-sender-id'
        - $ref: '#/components/parameters/x-async'
        - $ref: '#/components/parameters/x-callbackendpoint'
      requestBody:
        description: Request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IDRequest'     
        required: true
      responses:
        '102':
          description: Processing 
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgeResponse'          
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '500':
          $ref: '#/components/responses/500'  
      security:
        - spmis_auth:
            - read:search
  /crvs/getMaritalStatus:
    post:
      tags:
        - CRVS APIs
      summary: 'API to retrieve marital status of a person based on ID'
      description: '' 
      parameters:
        - $ref: "#/components/parameters/version"
        - $ref: "#/components/parameters/x-hmac"
        - $ref: "#/components/parameters/authorization"
        - $ref: '#/components/parameters/x-registry-type'
        - $ref: '#/components/parameters/x-message-id'
        - $ref: '#/components/parameters/x-timestamp'
        - $ref: '#/components/parameters/x-sender-id'
        - $ref: '#/components/parameters/x-async'
        - $ref: '#/components/parameters/x-callbackendpoint'
      requestBody:
        description: Request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MaritalStatusCheckRequest'     
        required: true
      responses:
        '102':
          description: Processing 
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MaritalStatusCheckResponse'          
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '500':
          $ref: '#/components/responses/500'  
      security:
        - spmis_auth:
            - read:search
  /crvs/getBirthInfo:
    post:
      tags:
        - CRVS APIs      
      summary: 'API that provides birth information for a person based on ID'
      description: '' 
      parameters:
        - $ref: "#/components/parameters/version"
        - $ref: "#/components/parameters/x-hmac"
        - $ref: "#/components/parameters/authorization"
        - $ref: '#/components/parameters/x-registry-type'
        - $ref: '#/components/parameters/x-message-id'
        - $ref: '#/components/parameters/x-timestamp'
        - $ref: '#/components/parameters/x-sender-id'
        - $ref: '#/components/parameters/x-async'
        - $ref: '#/components/parameters/x-callbackendpoint'
      requestBody:
        description: Request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IDRequest'     
        required: true
      responses:
        '102':
          description: Processing 
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BirthInfoResponse'          
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '500':
          $ref: '#/components/responses/500' 
 
      security:
        - spmis_auth:
            - read:search
  /crvs/getMarriageInfo:
    post:
      tags:
        - CRVS APIs      
      summary: 'API that provides marriage information for a person based on ID'
      description: '' 
      parameters:
        - $ref: "#/components/parameters/version"
        - $ref: "#/components/parameters/x-hmac"
        - $ref: "#/components/parameters/authorization"
        - $ref: '#/components/parameters/x-registry-type'
        - $ref: '#/components/parameters/x-message-id'
        - $ref: '#/components/parameters/x-timestamp'
        - $ref: '#/components/parameters/x-sender-id'
        - $ref: '#/components/parameters/x-async'
        - $ref: '#/components/parameters/x-callbackendpoint'
      requestBody:
        description: Request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MarriageInfoRequest'     
        required: true
      responses:
        '102':
          description: Processing 
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MarriageInfoResponse'          
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '500':
          $ref: '#/components/responses/500'  
      security:
        - spmis_auth:
            - read:search
  /crvs/getDeathInfo:
    post:
      tags:
        - CRVS APIs      
      summary: 'API that provides death information for a person based on ID'
      description: '' 
      parameters:
        - $ref: "#/components/parameters/version"
        - $ref: "#/components/parameters/x-hmac"
        - $ref: "#/components/parameters/authorization"
        - $ref: '#/components/parameters/x-registry-type'
        - $ref: '#/components/parameters/x-message-id'
        - $ref: '#/components/parameters/x-timestamp'
        - $ref: '#/components/parameters/x-sender-id'
        - $ref: '#/components/parameters/x-async'
        - $ref: '#/components/parameters/x-callbackendpoint'
      requestBody:
        description: Request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IDRequest'     
        required: true
      responses:
        '102':
          description: Processing 
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeathInfoResponse'          

        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '500':
          $ref: '#/components/responses/500' 
      security:
        - spmis_auth:
            - read:search
  /crvs/getPersonInfo:
    post:
      tags:
        - CRVS APIs      
      summary: 'API that provides person info based on an ID'
      description:  ''
      parameters:
        - $ref: "#/components/parameters/version"
        - $ref: "#/components/parameters/x-hmac"
        - $ref: "#/components/parameters/authorization"
        - $ref: '#/components/parameters/x-registry-type'
        - $ref: '#/components/parameters/x-message-id'
        - $ref: '#/components/parameters/x-timestamp'
        - $ref: '#/components/parameters/x-sender-id'
        - $ref: '#/components/parameters/x-async'
        - $ref: '#/components/parameters/x-callbackendpoint'
      requestBody:
        description: Request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IDRequest'
        required: true
      responses:
        '102':
          description: Processing 
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IDInfoLookupResponse'          
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '500':
          $ref: '#/components/responses/500' 
      security:
        - spmis_auth:
            - read:search
  /crvs/getParentInfo:
    post:
      tags:
        - CRVS APIs      
      summary: 'API that provides parents information of a person based on an ID'
      description:  ''
      parameters:
        - $ref: "#/components/parameters/version"
        - $ref: "#/components/parameters/x-hmac"
        - $ref: "#/components/parameters/authorization"
        - $ref: '#/components/parameters/x-registry-type'
        - $ref: '#/components/parameters/x-message-id'
        - $ref: '#/components/parameters/x-timestamp'
        - $ref: '#/components/parameters/x-sender-id'
        - $ref: '#/components/parameters/x-async'
        - $ref: '#/components/parameters/x-callbackendpoint'
      requestBody:
        description: Request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetParentInfoRequest'
        required: true
      responses:
        '102':
          description: Processing 
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChildDemographicResponse'          
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '500':
          $ref: '#/components/responses/500' 
      security:
        - spmis_auth:
            - read:search
  /crvs/getChildInfo:
    post:
      tags:
        - CRVS APIs      
      summary: 'API that fetch list of children with basic information, Caller must mass either father or mother uin details'
      description:  ''
      parameters:
        - $ref: "#/components/parameters/version"
        - $ref: "#/components/parameters/x-hmac"
        - $ref: "#/components/parameters/authorization"
        - $ref: '#/components/parameters/x-registry-type'
        - $ref: '#/components/parameters/x-message-id'
        - $ref: '#/components/parameters/x-timestamp'
        - $ref: '#/components/parameters/x-sender-id'
        - $ref: '#/components/parameters/x-async'
        - $ref: '#/components/parameters/x-callbackendpoint'
      requestBody:
        description: Request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetChildInfoRequest'
        required: true
      responses:
        '102':
          description: Processing 
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetChildInfoResponse'          
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '500':
          $ref: '#/components/responses/500'  
      security:
        - spmis_auth:
            - read:search

  /crvs/getVitalEventDates:
    post:
      tags:
        - CRVS APIs
      summary: 'API that provides date of birth/date of death/marriage date based on ID'
      description: ''
      parameters:
        - $ref: "#/components/parameters/version"
        - $ref: "#/components/parameters/x-hmac"
        - $ref: "#/components/parameters/authorization"
        - $ref: '#/components/parameters/x-registry-type'
        - $ref: '#/components/parameters/x-message-id'
        - $ref: '#/components/parameters/x-timestamp'
        - $ref: '#/components/parameters/x-sender-id'
        - $ref: '#/components/parameters/x-async'
        - $ref: '#/components/parameters/x-callbackendpoint'
      requestBody:
        description: Request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IDEventDatesRequest'      
        required: true
      responses:
        '102':
          description: Processing 
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IDEventDatesResponse'          
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '500':
          $ref: '#/components/responses/500' 
      security:
        - spmis_auth:
            - read:search

  /crvs/getVitalEvents:
    post:
      tags:
        - CRVS APIs
      summary: 'API that provides life event details based on vital event type and data retrieved based on ID of person'
      description: ''
      parameters:
        - $ref: "#/components/parameters/version"
        - $ref: "#/components/parameters/x-hmac"
        - $ref: "#/components/parameters/authorization"
        - $ref: '#/components/parameters/x-registry-type'
        - $ref: '#/components/parameters/x-message-id'
        - $ref: '#/components/parameters/x-timestamp'
        - $ref: '#/components/parameters/x-sender-id'
        - $ref: '#/components/parameters/x-async'
        - $ref: '#/components/parameters/x-callbackendpoint'
      requestBody:
        description: Request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventInfoRequest'     
        required: true
      responses:
        '102':
          description: Processing 
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventInfoResponse'  
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '500':
          $ref: '#/components/responses/500'
      security:
        - spmis_auth:
            - read:search

  
components:
  responses:
        '102':
          description: Processing 
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorResponse400' 
                
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorResponse401' 
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorResponse403' 
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorResponse404' 
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorResponse405'
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorResponse422' 
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorResponse500' 
  parameters:
    authorization:
      name: Authorization
      in: header
      required: true
      description: Access token which was issued after successful login with gateway auth server.
      schema:
        type: string
        example: Bearer <...>        
    version:
      in: header
      name: x-api-version
      schema:
        type: string
        example: "1.0.0"
      required: false
      description: If not provided use latest api version as default
    x-timestamp:
      in: header
      name: timestamp
      schema:
        type: string
        example: "2022-12-04T18:01:07+00:00"
      required: true
      description: Timestamp of request when it was sent , ideally it should be GMT
    x-hmac:
      in: header
      name: x-hmac
      schema:
        type: string
        example: "bd4a82cd319ababe57d0a822049ae8985029f82237509d3f091c82cbc7a6945c"
      required: true
      description: Signature created in combination of {payload}+{x-timestamp:}+{x-sender-id}.This is usually encrypted string using HMAC-SHA-256 algorithm with the private key.
    x-registry-type:
      in: header
      name: x-registry-type
      schema:
        type: string
        enum: ['x-crvs']
      required: true
      description: This param used to decide which service to be called to retrieve data
    x-sender-id:
      in: header
      name: x-sender-id
      schema:
        type: string
        example: "SP_CRVS_2022"
      required: true
      description: Information about requester , it may be some code of SP system
    x-message-id:
      in: header
      name: x-message-id
      schema:
        type: string
        format: uuid
        example: 0c96614c-7255-4774-b109-cd53ee859000
      required: true
      description: UUID string to be sent in request header for tracking of request
    x-async:
      in: header
      name: x-async
      schema:
        type: string
        example: true
      required: true
      description: Async param indicate that response to be sent immediate or in call back, if _true_ send data in response if _false_ just return HTTP status 202
    x-callbackendpoint:
      in: header
      name: x-callbackendpoint
      schema:
        type: string
        example: "https://senderhost/callback/on-disburse"
      required: false
      description: If async response requested then this param to be supplied for receiving data in SP system, this is usually endpoint active in SP env

  schemas:

    IsAliveCheckRequest:
      type: object
      example: '{"beneficiary_list": [{"type": "NATIONAL_ID","value": "345678912"},{"type": "NATIONAL_ID","value": "567891011"}]}'
      properties:
        beneficiary_list:
          type: array
          example: '{"beneficiary_list": [{"type": "NATIONAL_ID","value": "345678912"},{"type": "NATIONAL_ID","value": "567891011"}]}'
          items:
            allOf:
              - $ref: '#/components/schemas/Identifier'
    IsAliveCheckResponse:
      allOf:
        - $ref: '#/components/schemas/ApiResponse'
      example: '{"status":"success","return_message":"Success message","transaction_id":"0c96614c-7255-4774-b109-cd53ee859000","data":[{"identifier":{"type":"NATIONAL_ID","value":"345678912"},"is_alive":"yes"},{"identifier":{"type":"NATIONAL_ID","value":"567891011"},"is_alive":"no"}]}'
      type: object
      properties:
        data: 
          type: array
          items:
            allOf:
              - $ref: '#/components/schemas/IsAliveCheckObject'
    IsAliveCheckObject:
      type: object
      properties:
        identifier:
          $ref: '#/components/schemas/Identifier'
        is_alive:
          type: string
          enum: [yes,no]
  
    IDEventDatesRequest:
      type: object
      example: '{"beneficiary_list": [{"type": "NATIONAL_ID","value": "345678912"},{"type": "NATIONAL_ID","value": "567891011"}]}'      
      properties:
        beneficiary_list:
          type: array
          items:
            allOf:
              - $ref: '#/components/schemas/Identifier'
    BirthInfoResponse:
      allOf:
        - $ref: '#/components/schemas/ApiResponse'
      type: object
      properties:
        data: 
          type: array
          items:
            allOf:
              - $ref: '#/components/schemas/BirthInfo'
    DeathInfoResponse:
      allOf:
        - $ref: '#/components/schemas/ApiResponse'
      type: object
      properties:
        data: 
          type: array
          items:
            allOf:
              - $ref: '#/components/schemas/DeathInfo'
      
    EventInfoRequest:
      type: object
      example: '{"beneficiary_list":[{"identifier":{"type":"NATIONAL_ID","value":"345678912"},"vital_event":"birth","transaction_id":"bb26699c-abda-45be-bdcb-7c22d13355fa"},{"identifier":{"type":"NATIONAL_ID","value":"345678913"},"vital_event":"death","transaction_id":"bb26699c-abda-45be-bdcb-7c22d13355fb"},{"identifier":{"type":"NATIONAL_ID","value":"345678914"},"vital_event":"marriage","transaction_id":"bb26699c-abda-45be-bdcb-7c22d13355fc"}]}'
      properties:
        beneficiary_list:
          type: array
          items:
            allOf:
              - $ref: '#/components/schemas/EventInfoRequestObject'
    
    EventInfoResponse:
      allOf:
        - $ref: '#/components/schemas/ApiResponse'
      type: object
      example: '{"status":"success","return_message":"Success message","transaction_id":"0c96614c-7255-4774-b109-cd53ee859000","data":[{"transaction_id":"bb26699c-abda-45be-bdcb-7c22d13355fa","vital_event":"birth","vital_event_data":[{"identifier":{"type":"NATIONAL_ID","value":"345678912"},"name":{"suffix":"PhD","prefix":"Mr.","first_name":"robert","middle_name":"","last_name":"doe"},"father_name":{"suffix":"PhD","prefix":"Mr.","first_name":"john","middle_name":"","last_name":"doe"},"mother_name":{"suffix":"PhD","prefix":"Mrs.","first_name":"jane","middle_name":"","last_name":"doe"},"contactno":"+91-0000000000","date_of_birth":{"day":"","month":"","year":""},"gender":"male","birth_registration_no":"01/03/2023","birth_place_address":{"house_no":"","address_line_1":"","address_line_2":"","district":"","state":"","postal_code":""}}]},{"transaction_id":"bb26699c-abda-45be-bdcb-7c22d13355fc","vital_event":"marriage","vital_event_data":[{"groom_identifier":[{"type":"NATIONAL_ID","value":"345678914"}],"groom_name":{"suffix":"PhD","prefix":"Mr.","first_name":"john","middle_name":"","last_name":"doe"},"groom_nationality":"Dominican","groom_date_of_birth":{"day":"","month":"","year":""},"bride_identifier":[{"type":"NATIONAL_ID","value":"789101112"}],"bride_name":{"suffix":"","prefix":"Mrs.","first_name":"jane","middle_name":"doe","last_name":"doe"},"bride_nationality":"Dominican","bride_date_of_birth":{"day":"","month":"","year":""},"date_of_marriage":{"day":"","month":"","year":""},"place_of_marriage":{"house_no":"","address_line_1":"","address_line_2":"","district":"","state":"","postal_code":""},"marriage_registration_number":"MRN_DC-20221205A12"}]},{"transaction_id":"bb26699c-abda-45be-bdcb-7c22d13355fb","vital_event":"death","vital_event_data":[{"identifier":{"type":"NATIONAL_ID","value":"345678913"},"name":{"suffix":"PhD","prefix":"Mr.","first_name":"john","middle_name":"doe","last_name":"doe"},"contactno":"+91-0000000000","date_of_death":{"day":"","month":"","year":""},"gender":"male","death_registration_no":"DRN_2512789","death_place_address":{"house_no":"","address_line_1":"","address_line_2":"","district":"","state":"","postal_code":""}}]}]}'
      properties:
        data: 
          type: array
          items:
            anyOf:
              - $ref: '#/components/schemas/EventInfoResponseObject'
    EventInfoResponseObject:
      type: object
      example: '{"status":"success","return_message":"Success message","transaction_id":"0c96614c-7255-4774-b109-cd53ee859000","data":[{"transaction_id":"bb26699c-abda-45be-bdcb-7c22d13355fa","vital_event":"birth","vital_event_data":[{"identifier":{"type":"NATIONAL_ID","value":"345678912"},"name":{"suffix":"PhD","prefix":"Mr.","first_name":"john","middle_name":"doe","last_name":"doe"},"father_name":{"suffix":"PhD","prefix":"Mr.","first_name":"john","middle_name":"doe","last_name":"doe"},"mother_name":{"suffix":"PhD","prefix":"Mr.","first_name":"john","middle_name":"doe","last_name":"doe"},"contactno":"+91-0000000000","date_of_birth":{"day":"","month":"","year":""},"gender":"male","birth_registration_no":"01/03/2023","birth_place_address":{"house_no":"","address_line_1":"","address_line_2":"","district":"","state":"","postal_code":""}}]},{"transaction_id":"bb26699c-abda-45be-bdcb-7c22d13355fc","vital_event":"marriage","vital_event_data":[{"groom_identifier":[{"type":"NATIONAL_ID","value":"345678912"}],"groom_name":{"suffix":"PhD","prefix":"Mr.","first_name":"john","middle_name":"doe","last_name":"doe"},"groom_nationality":"Dominican","groom_date_of_birth":{"day":"","month":"","year":""},"bride_identifier":[{"type":"NATIONAL_ID","value":"345678912"}],"bride_name":{"suffix":"PhD","prefix":"Mr.","first_name":"john","middle_name":"doe","last_name":"doe"},"bride_nationality":"Dominican","bride_date_of_birth":{"day":"","month":"","year":""},"date_of_marriage":{"day":"","month":"","year":""},"place_of_marriage":{"house_no":"","address_line_1":"","address_line_2":"","district":"","state":"","postal_code":""},"marriage_registration_number":"MRN_DC-20221205A12"}]},{"transaction_id":"bb26699c-abda-45be-bdcb-7c22d13355fb","vital_event":"death","vital_event_data":[{"identifier":{"type":"NATIONAL_ID","value":"345678912"},"name":{"suffix":"PhD","prefix":"Mr.","first_name":"john","middle_name":"doe","last_name":"doe"},"contactno":"+91-0000000000","date_of_death":{"day":"","month":"","year":""},"gender":"male","death_registration_no":"DRN_2512789","death_place_address":{"house_no":"","address_line_1":"","address_line_2":"","district":"","state":"","postal_code":""}}]}]}'
      properties:
        transaction_id:
          type: string
          example: 'bb26699c-abda-45be-bdcb-7c22d13355fb'
        vital_event:
          type: string
          enum: ['birth','death','marriage']
        vital_event_data:
          type: array
          items:
            anyOf:
              - $ref: '#/components/schemas/BirthInfo'
              - $ref: '#/components/schemas/DeathInfo'
              - $ref: '#/components/schemas/MarriageInfoObject'
    ChildInfo:
      type: object
      properties:
        identifier:
          $ref: '#/components/schemas/Identifier'
        name:
          $ref: '#/components/schemas/HumanName'
        date_of_birth:
          $ref: '#/components/schemas/DateObject'
        gender:
          type: string
          example: '1'    
          enum: ['1|male','2|female','3|transgender']
        birth_registration_no:
          type: string
          example: 'BRN-IN025456798'
        birth_place_address:
          $ref: '#/components/schemas/Address'
    DateObject:
      type: object
      properties:
        day:
          type: string
          example: ''
        month: 
          type: string
          example: ''
        year: 
          type: string
          example: ''       
        
    BirthInfo:
      type: object
      properties:
        identifier:
          $ref: '#/components/schemas/Identifier'
        name:
          $ref: '#/components/schemas/HumanName'
        father_name:
          $ref: '#/components/schemas/HumanName'
        mother_name:
          $ref: '#/components/schemas/HumanName'
        contactno:
          type: string
          example: '+91-0000000000'
        date_of_birth:
          $ref: '#/components/schemas/DateObject'
        gender:
          type: string
          example: 'male'    
        birth_registration_no:
          type: string
          example: '01/03/2023'
        birth_place_address:
          $ref: '#/components/schemas/Address'
          
    DeathInfo:
      type: object
      properties:
        identifier:
          $ref: '#/components/schemas/Identifier'
        name:
          $ref: '#/components/schemas/HumanName'
        contactno:
          type: string
          example: '+91-0000000000'
        date_of_death:
          $ref: '#/components/schemas/DateObject'
        gender:
          type: string
          example: 'male'    
        death_registration_no:
          type: string
          example: 'DRN_2512789'
        death_place_address:
          $ref: '#/components/schemas/Address'
    EventInfoRequestObject:
      type: object
      properties:
        identifier:
          $ref: '#/components/schemas/Identifier'
        vital_event:
          type: string
          enum: ['birth','death','marriage']
        transaction_id:
          type: string
          example: 'bb26699c-abda-45be-bdcb-7c22d13355fb'
    IDEventDatesResponse:
      allOf:
        - $ref: '#/components/schemas/ApiResponse'
      type: object
      properties:
        data: 
          type: array
          items:
            allOf:
              - $ref: '#/components/schemas/IDEventDatesObject'
    IDEventDatesObject:
      type: object
      properties:
        identifier:
          $ref: '#/components/schemas/Identifier'
        name:
          $ref: '#/components/schemas/HumanName'
        contactno:
          type: string
          example: '+91-0000000000'
        date_of_birth:
          $ref: '#/components/schemas/DateObject'
        date_of_death:
          $ref: '#/components/schemas/DateObject'
        date_of_marriage:
          $ref: '#/components/schemas/DateObject'
        gender:
          type: string
          example: 'male'          

 
    IDInfoLookupResponse:
      allOf:
        - $ref: '#/components/schemas/ApiResponse'
      type: object
      properties:
        data: 
          type: array
          items:
            allOf:
              - $ref: '#/components/schemas/IDInfoLookupObject'
    IDInfoLookupObject:
      type: object
      properties:
        identifier:
          $ref: '#/components/schemas/Identifier'
        name:
          $ref: '#/components/schemas/HumanName'
        contactno:
          type: string
          example: '+91-0000000000'
        date_of_birth:
          $ref: '#/components/schemas/DateObject'
        gender:
          type: string
          example: 'male'
          
    GetParentInfoRequest:
      type: object
      example: '{"beneficiary_list":[{"type":"NATIONAL_ID","value":"789101112"},{"type":"NATIONAL_ID","value":"789121314"}]}'
      properties:
        beneficiary_list:
          type: array
          items:
            allOf:
              - $ref: '#/components/schemas/Identifier'        
      
    ChildDemographicResponse:
      allOf:
        - $ref: '#/components/schemas/ApiResponse'
      example: '{"status":"success","return_message":"Success message","transaction_id":"0c96614c-7255-4774-b109-cd53ee859000","data":[{"identifier":{"type":"NATIONAL_ID","value":"789101112"},"name":{"suffix":"","prefix":"Mr.","first_name":"robert","middle_name":"","last_name":"doe"},"father_name":{"suffix":"PhD","prefix":"Mr.","first_name":"john","middle_name":"","last_name":"doe"},"mother_name":{"suffix":"","prefix":"Mrs.","first_name":"jane","middle_name":"","last_name":"doe"},"contactno":"+91-0000000000","date_of_birth":{"day":"","month":"","year":""},"date_of_death":{"day":"","month":"","year":""},"gender":"male"}]}'
      type: object
      properties:
        data: 
          type: array
          items:
            allOf:
              - $ref: '#/components/schemas/ChildDemographicObject'
    ChildDemographicObject:
      type: object
      properties:
        identifier:
          $ref: '#/components/schemas/Identifier'
        name:
          $ref: '#/components/schemas/HumanName'
        father_name:
          $ref: '#/components/schemas/HumanName'
        mother_name:
          $ref: '#/components/schemas/HumanName'
        contactno:
          type: string
          example: '+91-0000000000'
        date_of_birth:
          $ref: '#/components/schemas/DateObject'
        date_of_death:
          $ref: '#/components/schemas/DateObject'
        gender:
          type: string
          example: 'male'          


    IDRequest:
      type: object
      example: '{"beneficiary_list": [{"type": "NATIONAL_ID","value": "345678912"},{"type": "NATIONAL_ID","value": "567891011"}]}'
      properties:
        beneficiary_list:
          type: array
          items:
            allOf:
              - $ref: '#/components/schemas/Identifier'
    AgeResponse:
      allOf:
        - $ref: '#/components/schemas/ApiResponse'
      example: '{"status":"success","return_message":"Success message","transaction_id":"0c96614c-7255-4774-b109-cd53ee859000","data":[{"identifier":{"type":"NATIONAL_ID","value":"345678912"},"age":50},{"identifier":{"type":"NATIONAL_ID","value":"567891011"},"age":70}]}'
      type: object
      properties:
        data: 
          type: array
          items:
            allOf:
              - $ref: '#/components/schemas/CategoryCheckObject'
    CategoryCheckObject:
      type: object
      properties:
        identifier:
          $ref: '#/components/schemas/Identifier'
        age:
          type: number
          example: 50
    MaritalStatusCheckRequest:
      type: object
      example: '{"beneficiary_list": [{"type": "NATIONAL_ID","value": "345678912"},{"type": "NATIONAL_ID","value": "567891011"}]}'      
      properties:
        beneficiary_list:
          type: array
          items:
            allOf:
              - $ref: '#/components/schemas/Identifier'
    MaritalStatusCheckResponse:
      allOf:
        - $ref: '#/components/schemas/ApiResponse'
      type: object
      properties:
        data: 
          type: array
          items:
            allOf:
              - $ref: '#/components/schemas/MaritalStatusCheckObject'
    MaritalStatusCheckObject:
      type: object
      properties:
        identifier:
          $ref: '#/components/schemas/Identifier'
        marital_status:
          type: string
          example: 1
          enum: ['1|single','2|married','3|annualed','4|widowed']

              
    MarriageInfoRequest:
      type: object
      example: '{"beneficiary_list": [{"type": "NATIONAL_ID","value": "345678912"},{"type": "NATIONAL_ID","value": "567891011"}]}'
      properties:
        beneficiary_list:
          type: array
          items:
            allOf:
              - $ref: '#/components/schemas/Identifier'
    MarriageInfoResponse:
      allOf:
        - $ref: '#/components/schemas/ApiResponse'
      example: '{"status":"success","return_message":"Success message","transaction_id":"0c96614c-7255-4774-b109-cd53ee859000","data":[{"groom_identifier":[{"type":"NATIONAL_ID","value":"345678912"}],"groom_name":{"suffix":"PhD","prefix":"Mr.","first_name":"john","middle_name":"doe","last_name":"doe"},"groom_nationality":"Dominican","groom_date_of_birth":{"day":"","month":"","year":""},"bride_identifier":[{"type":"NATIONAL_ID","value":"567891011"}],"bride_name":{"suffix":"PhD","prefix":"Mrs.","first_name":"jane","middle_name":"doe","last_name":"doe"},"bride_nationality":"Dominican","bride_date_of_birth":{"day":"","month":"","year":""},"date_of_marriage":{"day":"","month":"","year":""},"place_of_marriage":{"house_no":"","address_line_1":"","address_line_2":"","district":"","state":"","postal_code":""},"marriage_registration_number":"MRN_DC-20221205A12"}]}'
      type: object
      properties:
        data: 
          type: array
          items:
            allOf:
              - $ref: '#/components/schemas/MarriageInfoObject'
    MarriageInfoObject:
      type: object
      properties:
        groom_identifier:
          type: array
          items:
            allOf:
              - $ref: '#/components/schemas/Identifier'
              - $ref: '#/components/schemas/Identifier'
        groom_name:
          $ref: '#/components/schemas/HumanName'
        groom_nationality:
          type: string
          example: 'Dominican'
        groom_date_of_birth:
          $ref: '#/components/schemas/DateObject'
        bride_identifier:
          type: array
          items:
            allOf:
              - $ref: '#/components/schemas/Identifier'
              - $ref: '#/components/schemas/Identifier'
        bride_name:
          $ref: '#/components/schemas/HumanName'
        bride_nationality:
          type: string
          example: 'Dominican'
        bride_date_of_birth:
          $ref: '#/components/schemas/DateObject'
        date_of_marriage:
          $ref: '#/components/schemas/DateObject'
        place_of_marriage:
          $ref: '#/components/schemas/Address'
        marriage_registration_number:
          type: string
          example: 'MRN_DC-20221205A12'     
    GetChildInfoRequest:
      type: object
      example: '{"transaction_id":"0c96614c-7255-4774-b109-cd53ee859001","request_data":[{"transaction_id":"0c96614c-7255-4774-b109-cd53ee859002","father_indentifier":{"type":"NATIONAL_ID","value":"345678912"},"mother_indentifier":{"type":"NATIONAL_ID","value":"567891011"}}]}'
      properties:
        transaction_id:
          type: string
          example: 0c96614c-7255-4774-b109-cd53ee859001
          description: The transaction_id to track request response
        request_data:
          type: array
          items:
            type: object
            anyOf:
              - $ref: '#/components/schemas/GetChildInfoRequestObject'
    GetChildInfoRequestObject:
      type: object
      properties:
        transaction_id:
          type: string
          example: 0c96614c-7255-4774-b109-cd53ee859002
          description: The transaction_id to track request response
        father_indentifier:
          $ref: '#/components/schemas/Identifier'
        mother_indentifier:
          $ref: '#/components/schemas/Identifier'

    GetChildInfoResponse:
      allOf:
        - $ref: '#/components/schemas/ApiResponse'
      example: '{"status":"success","return_message":"Success message","transaction_id":"0c96614c-7255-4774-b109-cd53ee859000","data":[{"transaction_id":"0c96614c-7255-4774-b109-cd53ee859002","child_data":[{"identifier":{"type":"NATIONAL_ID","value":"789101112"},"name":{"suffix":"PhD","prefix":"Mr.","first_name":"robert","middle_name":"doe","last_name":"doe"},"date_of_birth":{"day":"","month":"","year":""},"gender":"1","birth_registration_no":"BRN-IN025456798","birth_place_address":{"house_no":"","address_line_1":"","address_line_2":"","district":"","state":"","postal_code":""}}]}]}'
      type: object
      properties:
        data:
          type: array
          items:
            type: object
            anyOf:
              - $ref: '#/components/schemas/GetChildInfoResponseObject'
    GetChildInfoResponseObject:
      type: object
      properties:
        transaction_id:
          type: string
          example: 0c96614c-7255-4774-b109-cd53ee859002
          description: The transaction_id to track request response
        child_data:
          type: array
          items:
            allOf:
              - $ref: '#/components/schemas/ChildInfo'

    
    
    ApiResponse:
      type: object
      properties:
        status:
          type: string
          example: 'success'
        return_message:
          type: string
          example: 'Success message'
        transaction_id:
          type: string
          example: 0c96614c-7255-4774-b109-cd53ee859000
          description: The transaction_id to track request response

    HumanName:
      type: object
      properties:
        suffix:
          type: string
          example: PhD
        prefix:
          type: string
          example: Mr.
        first_name:
          type: string
          example: john
        middle_name:
          type: string
          example: doe
        last_name:
          type: string
          example: doe


    Identifier:
      type: object
      properties:
        type:
          type: string
          enum: ['NATIONAL_ID','BIRTH_REG_NO','MARRIAGE_REG_NO','DEATH_REG_NO']
        value:
          type: string
          example: 345678912
    HttpErrorResponse400:
      description: HTTP layer error details
      properties:
        error_code:
          type: string
          example: 'ERR-400-01'   
        error_message:
          type: string
          example: 'Bad Request'
    HttpErrorResponse401:
      description: HTTP layer error details
      properties:
        error_code:
          type: string
          example: 'ERR-401-01'   
        error_message:
          type: string
          example: 'Unauthorized' 
    HttpErrorResponse403:
      description: HTTP layer error details
      properties:
        error_code:
          type: string
          example: 'ERR-403-01'      
        error_message:
          type: string
          example: 'Forbidden'   
    HttpErrorResponse404:
      description: HTTP layer error details
      properties:
        error_code:
          type: string
          example: 'ERR-404-01'   
        error_message:
          type: string
          example: 'Not Found'
    HttpErrorResponse422:
      description: HTTP layer error details
      properties:
        error_code:
          type: string
          example: 'ERR-422-01'   
        error_message:
          type: string
          example:    
    HttpErrorResponse405:
      description: HTTP layer error details
      properties:
        error_code:
          type: string
          example: 'ERR-405-01'       
        error_message:
          type: string
          example: 'Method Not Allowed'
    HttpErrorResponse500:
      description: HTTP layer error details
      properties:
        error_code:
          type: string
          example: 'ERR-500-01'   
        error_message:
          type: string
          example: 'Internal server error'  
    Address:
      type: object
      properties:
        house_no:
          type: string
          example: ''
        address_line_1:
          type: string
          example: ''
        address_line_2:
          type: string
          example: ''          
        district:
          type: string
          example: ''          
        state:
          type: string
          example: ''          
        postal_code:
          type: string
          example: ''
  securitySchemes:
    spmis_auth:            # arbitrary name for the security scheme
      type: http
      scheme: bearer
      bearerFormat: JWT