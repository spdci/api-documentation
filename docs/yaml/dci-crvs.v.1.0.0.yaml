openapi: 3.0.3
info:
  title: CRVS interoperability APIs
  description: |-
    The CRVS interoperability APIs describes different APIs some of them are usecase specific and other are generalized APIs to perform interoperable operations between CRVS registry and SP system.  !
    You can now help us improve the API whether it's by making changes to the definition itself or to the code.
    That way, with time, we can improve the API in general, and expose some of the new features in upcoming version.

    `Search API > ` The Search API provides functionality to search based on demographic, identifiers and custom query

    `CRVS APIs > ` The CRVS APIs section defines APIs that are usecase specific and suitable to implement scenario of where minimum data to be exposed via APIs 
    
    `Query APIs > ` The Query APIs facilate to accept usecases via term query and perform multiple operation in single API for multiple criteria
    
    `Event subscription > ` The Event subscription APIs describe APIs useful to subscribe / unsubscribe events. When any event happens in crvs registry it sends event details on notify end point
    
    `Request status checking API > ` The request status checking APIs implement to check status of request sent in any above APIs
    
    Gitbook reference link:
    - [CRVS - V1.0 ](https://app.gitbook.com/o/0iSqNDBWH70sLmGExne0/s/qxauqL1oEtZWtHYd2Uzz/dci/readme)
    
  version: 1.0.0
servers:
  - description: API host endpoint
    url: https://apihost/
tags:
  - name: Search API
    description: '' 
  - name: Query APIs
    description: ''
  - name: Event subscription
    description: ''
  - name: Request status checking API 
    description: ''
  - name: CRVS APIs
    description: '' 
paths:
  /search:
    post:
      tags:
        - Search API
      summary: Search data in registry
      description: '' 
      parameters:
        - $ref: "./headers.yaml#/components/parameters/authorization"
      requestBody:
        description: Search request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchRequestObject' 
          application/xml:
            schema:
              $ref: '#/components/schemas/SearchRequestObject'                   
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FileUploadRequest'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchResponse'          
            application/xml:
              schema:
                $ref: '#/components/schemas/SearchResponse'
            application/octet-stream:
              schema:
                type: string
                format: binary                
        '201':
          $ref: './responses.yaml#/components/responses/201'
        '202':
          $ref: './responses.yaml#/components/responses/202'
        '400':
          $ref: './responses.yaml#/components/responses/400'
        '401':
          $ref: './responses.yaml#/components/responses/401'
        '403':
          $ref: './responses.yaml#/components/responses/403'
        '404':
          $ref: './responses.yaml#/components/responses/404'
        '405':
          $ref: './responses.yaml#/components/responses/405'
        '500':
          $ref: './responses.yaml#/components/responses/500' 
      security:
        - x-access-token:
            - read:search
  /on-search:
    post:
      tags:
        - Search API 
      summary: Search request call back
      description: The requester will pass information submitted in search and if response prepared then it will send content
      parameters:
        - $ref: "./headers.yaml#/components/parameters/authorization"
      requestBody:
        description: Search request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchResponse'
          application/xml:
            schema:
              $ref: '#/components/schemas/SearchResponse'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FileUploadRequest'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: './responses.yaml#/components/schemas/ApiResponse'          
            application/xml:
              schema:
                $ref: './responses.yaml#/components/schemas/ApiResponse'
        '201':
          $ref: './responses.yaml#/components/responses/201'
        '202':
          $ref: './responses.yaml#/components/responses/202'
        '400':
          $ref: './responses.yaml#/components/responses/400'
        '401':
          $ref: './responses.yaml#/components/responses/401'
        '403':
          $ref: './responses.yaml#/components/responses/403'
        '404':
          $ref: './responses.yaml#/components/responses/404'
        '405':
          $ref: './responses.yaml#/components/responses/405'
        '500':
          $ref: './responses.yaml#/components/responses/500' 

      security:
        - x-access-token:
            - read:search
  /subscription-list:
    get:
      tags:
        - Event subscription 
      summary: Get list of supported events in registry
      parameters:
        - $ref: "./headers.yaml#/components/parameters/authorization"
      description: ''
      operationId: ''
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema: 
                type: array
                example: ["BIRTH_REGISTRATION", "DEATH_REGISTRATION","MARRIAGE_REGISTRATION","DIVORCE_REGISTRATION","DEMOGRAPHIC_UPDATE"]
                items:
                  type: string         

      security:
        - x-access-token:
            - read:search
  /subscribe:
    post:
      tags:
        - Event subscription  
      summary: To subscribe for specific events
      description: Response will contain details of subscription
      operationId: ''
      parameters:
        - $ref: "./headers.yaml#/components/parameters/authorization"
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: './subscriptions.yaml#/components/schemas/SubscriptionRequest'     
          application/xml:
            schema:
              $ref: './subscriptions.yaml#/components/schemas/SubscriptionRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FileUploadRequest'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: './subscriptions.yaml#/components/schemas/SubscriptionResponse'     
            application/xml:
              schema:
                $ref: './subscriptions.yaml#/components/schemas/SubscriptionResponse'
            application/octet-stream:
              schema:
                type: string
                format: binary                
        '201':
          $ref: './responses.yaml#/components/responses/201'
        '202':
          $ref: './responses.yaml#/components/responses/202'

        '400':
          $ref: './responses.yaml#/components/responses/400'
        '401':
          $ref: './responses.yaml#/components/responses/401'
        '403':
          $ref: './responses.yaml#/components/responses/403'
        '404':
          $ref: './responses.yaml#/components/responses/404'
        '405':
          $ref: './responses.yaml#/components/responses/405'
        '500':
          $ref: './responses.yaml#/components/responses/500' 
             
      security:
        - x-access-token:
            - read:search
  /unsubscribe:
    post:
      tags:
        - Event subscription  
      summary: To un-subscribe for events
      description: ''
      operationId: ''
      parameters:
        - $ref: "./headers.yaml#/components/parameters/authorization"
      requestBody:
        description: 'Request to un-subscribe'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnSubscribeRequest'     
          application/xml:
            schema:
              $ref: '#/components/schemas/UnSubscribeRequest'     
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FileUploadRequest'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnSubscribeResponse'     
            application/xml:
              schema:
                $ref: '#/components/schemas/UnSubscribeResponse'
            application/octet-stream:
              schema:
                type: string
                format: binary                

        '201':
          $ref: './responses.yaml#/components/responses/201'
        '202':
          $ref: './responses.yaml#/components/responses/202'

        '400':
          $ref: './responses.yaml#/components/responses/400'
        '401':
          $ref: './responses.yaml#/components/responses/401'
        '403':
          $ref: './responses.yaml#/components/responses/403'
        '404':
          $ref: './responses.yaml#/components/responses/404'
        '405':
          $ref: './responses.yaml#/components/responses/405'
        '500':
          $ref: './responses.yaml#/components/responses/500'             
      security:
        - x-access-token:
            - read:search
  /notify:
    post:
      tags:
        - Event subscription
      summary: The notify end point to be implemented at subscriber system. The registry will send event data on this end point.
      description: ''
      parameters:
        - $ref: "./headers.yaml#/components/parameters/authorization"
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventNotificationRequest'     
          application/xml:
            schema:
              $ref: '#/components/schemas/EventNotificationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FileUploadRequest'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventResponse'     
            application/xml:
              schema:
                $ref: '#/components/schemas/EventResponse'
            application/octet-stream:
              schema:
                type: string
                format: binary                

        '201':
          $ref: './responses.yaml#/components/responses/201'
        '202':
          $ref: './responses.yaml#/components/responses/202'

        '400':
          $ref: './responses.yaml#/components/responses/400'
        '401':
          $ref: './responses.yaml#/components/responses/401'
        '403':
          $ref: './responses.yaml#/components/responses/403'
        '404':
          $ref: './responses.yaml#/components/responses/404'
        '405':
          $ref: './responses.yaml#/components/responses/405'
        '500':
          $ref: './responses.yaml#/components/responses/500'                  
      security:
        - x-access-token:
            - read:search
  /status:
    post:
      tags:
        - Request status checking API 
      summary: ''
      description: ''
      operationId: ''
      parameters:
        - $ref: "./headers.yaml#/components/parameters/authorization"
      requestBody:
        description: 'Request to un-subscribe'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestStatusCheckRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/RequestStatusCheckRequest'                   
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FileUploadRequest'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestStatusCheckResponse'     
            application/xml:
              schema:
                $ref: '#/components/schemas/RequestStatusCheckResponse'
            application/octet-stream:
              schema:
                type: string
                format: binary                

        '201':
          $ref: './responses.yaml#/components/responses/201'
        '202':
          $ref: './responses.yaml#/components/responses/202'

        '400':
          $ref: './responses.yaml#/components/responses/400'
        '401':
          $ref: './responses.yaml#/components/responses/401'
        '403':
          $ref: './responses.yaml#/components/responses/403'
        '404':
          $ref: './responses.yaml#/components/responses/404'
        '405':
          $ref: './responses.yaml#/components/responses/405'
        '500':
          $ref: './responses.yaml#/components/responses/500'             
      security:
        - x-access-token:
            - read:search
  /on-status:
    post:
      tags:
        - Request status checking API 
      summary: ''
      description: ''
      operationId: ''
      parameters:
        - $ref: "./headers.yaml#/components/parameters/authorization"
      requestBody:
        description: 'Request to un-subscribe'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestStatusCheckResponse'     
          application/xml:
            schema:
              $ref: '#/components/schemas/RequestStatusCheckResponse' 
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FileUploadRequest'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: './responses.yaml#/components/schemas/BaseResponse'     
            application/xml:
              schema:
                $ref: './responses.yaml#/components/schemas/BaseResponse'
        '201':
          $ref: './responses.yaml#/components/responses/201'
        '202':
          $ref: './responses.yaml#/components/responses/202'

        '400':
          $ref: './responses.yaml#/components/responses/400'
        '401':
          $ref: './responses.yaml#/components/responses/401'
        '403':
          $ref: './responses.yaml#/components/responses/403'
        '404':
          $ref: './responses.yaml#/components/responses/404'
        '405':
          $ref: './responses.yaml#/components/responses/405'
        '500':
          $ref: './responses.yaml#/components/responses/500'             
      security:
        - x-access-token:
            - read:search
  /isAlive:
    post:
      tags:
        - CRVS APIs
      summary: ''
      description: 'API to check if a person is alive or not based on ID' 
      parameters:
        - $ref: "./headers.yaml#/components/parameters/authorization"
      requestBody:
        description: Request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IsAliveCheckRequest'
            examples:
              jsonExample:
                summary: Example JSON request
                value: '{"signature":"Signature:  namespace=\"dci\", kidId=\"{sender_id}|{unique_key_id}|{algorithm}\", algorithm=\"ed25519\", created=\"1606970629\", expires=\"1607030629\", headers=\"(created) (expires) digest\", signature=\"Base64(signing content)","headers":{"version":"1.0.0","message_id":"123456789020211216223812","message_ts":"2022-12-04T18:01:07+00:00","sender_id":"SP0001","registry_type":"OpenCRVS","total_count":10,"async":true,"callbackendpoint":"https://senderhost/callback/on-disburse"},"payload":{"beneficiary":[{"identifier_type":"national_id","identifier_value":"345678912@mosip"},{"identifier_type":"national_id","identifier_value":"567891011@mosip"},{"identifier_type":"national_id","identifier_value":"123456789@mosip"},{"identifier_type":"national_id","identifier_value":"987654321@mosip"},{"identifier_type":"national_id","identifier_value":"234567890@mosip"},{"identifier_type":"national_id","identifier_value":"456789012@mosip"},{"identifier_type":"national_id","identifier_value":"789012345@mosip"},{"identifier_type":"national_id","identifier_value":"890123456@mosip"},{"identifier_type":"national_id","identifier_value":"901234567@mosip"},{"identifier_type":"national_id","identifier_value":"123457890@mosip"},{"identifier_type":"national_id","identifier_value":"234568901@mosip"},{"identifier_type":"national_id","identifier_value":"345679012@mosip"},{"identifier_type":"national_id","identifier_value":"456790123@mosip"},{"identifier_type":"national_id","identifier_value":"567801234@mosip"},{"identifier_type":"national_id","identifier_value":"678912345@mosip"},{"identifier_type":"national_id","identifier_value":"789023456@mosip"},{"identifier_type":"national_id","identifier_value":"890134567@mosip"},{"identifier_type":"national_id","identifier_value":"901245678@mosip"},{"identifier_type":"national_id","identifier_value":"123456789@mosip"}]},"sortby":{"fieldname":"is_alive","order":"desc"},"pagination":{"page_size":10,"page_number":1}}'
          application/xml:
            schema:
              $ref: '#/components/schemas/IsAliveCheckRequest'
            examples:
              xmlExample:
                summary: Example XML request
                value: |
                  <?xml version="1.0" encoding="UTF-8" ?>
                  <root>
                  	<signature>Signature:  namespace="dci", kidId="{sender_id}|{unique_key_id}|{algorithm}", algorithm="ed25519", created="1606970629", expires="1607030629", headers="(created) (expires) digest", signature="Base64(signing content)</signature>
                  	<headers>
                  		<version>1.0.0</version>
                  		<message_id>123456789020211216223812</message_id>
                  		<message_ts>2022-12-04T18:01:07+00:00</message_ts>
                  		<sender_id>SP0001</sender_id>
                  		<registry_type>OpenCRVS</registry_type>
                  		<total_count>10</total_count>
                  		<async>true</async>
                  		<callbackendpoint>https://senderhost/callback/on-disburse</callbackendpoint>
                  	</headers>
                  	<payload>
                  		<beneficiary>
                  			<identifier_type>national_id</identifier_type>
                  			<identifier_value>345678912@mosip</identifier_value>
                  		</beneficiary>
                  		<beneficiary>
                  			<identifier_type>national_id</identifier_type>
                  			<identifier_value>567891011@mosip</identifier_value>
                  		</beneficiary>
                  		<beneficiary>
                  			<identifier_type>national_id</identifier_type>
                  			<identifier_value>123456789@mosip</identifier_value>
                  		</beneficiary>
                  		<beneficiary>
                  			<identifier_type>national_id</identifier_type>
                  			<identifier_value>987654321@mosip</identifier_value>
                  		</beneficiary>
                  		<beneficiary>
                  			<identifier_type>national_id</identifier_type>
                  			<identifier_value>234567890@mosip</identifier_value>
                  		</beneficiary>
                  		<beneficiary>
                  			<identifier_type>national_id</identifier_type>
                  			<identifier_value>456789012@mosip</identifier_value>
                  		</beneficiary>
                  		<beneficiary>
                  			<identifier_type>national_id</identifier_type>
                  			<identifier_value>789012345@mosip</identifier_value>
                  		</beneficiary>
                  		<beneficiary>
                  			<identifier_type>national_id</identifier_type>
                  			<identifier_value>890123456@mosip</identifier_value>
                  		</beneficiary>
                  		<beneficiary>
                  			<identifier_type>national_id</identifier_type>
                  			<identifier_value>901234567@mosip</identifier_value>
                  		</beneficiary>
                  		<beneficiary>
                  			<identifier_type>national_id</identifier_type>
                  			<identifier_value>123457890@mosip</identifier_value>
                  		</beneficiary>
                  		<beneficiary>
                  			<identifier_type>national_id</identifier_type>
                  			<identifier_value>234568901@mosip</identifier_value>
                  		</beneficiary>
                  		<beneficiary>
                  			<identifier_type>national_id</identifier_type>
                  			<identifier_value>345679012@mosip</identifier_value>
                  		</beneficiary>
                  		<beneficiary>
                  			<identifier_type>national_id</identifier_type>
                  			<identifier_value>456790123@mosip</identifier_value>
                  		</beneficiary>
                  		<beneficiary>
                  			<identifier_type>national_id</identifier_type>
                  			<identifier_value>567801234@mosip</identifier_value>
                  		</beneficiary>
                  		<beneficiary>
                  			<identifier_type>national_id</identifier_type>
                  			<identifier_value>678912345@mosip</identifier_value>
                  		</beneficiary>
                  		<beneficiary>
                  			<identifier_type>national_id</identifier_type>
                  			<identifier_value>789023456@mosip</identifier_value>
                  		</beneficiary>
                  		<beneficiary>
                  			<identifier_type>national_id</identifier_type>
                  			<identifier_value>890134567@mosip</identifier_value>
                  		</beneficiary>
                  		<beneficiary>
                  			<identifier_type>national_id</identifier_type>
                  			<identifier_value>901245678@mosip</identifier_value>
                  		</beneficiary>
                  		<beneficiary>
                  			<identifier_type>national_id</identifier_type>
                  			<identifier_value>123456789@mosip</identifier_value>
                  		</beneficiary>
                  	</payload>
                  	<sortby>
                  		<fieldname>is_alive</fieldname>
                  		<order>desc</order>
                  	</sortby>
                  	<pagination>
                  		<page_size>10</page_size>
                  		<page_number>1</page_number>
                  	</pagination>
                  </root>           
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FileUploadRequest'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IsAliveCheckResponse'          
              examples:
                jsonExample:
                  summary: 'Example json response'
                  value: '{"status":"success","return_message":"Data retrieved successfully","correlation_id":"123456789020211216223812","total_count":20,"payload":{"beneficiary":[{"identifier":{"identifier_type":"national_id","identifier_value":"345678912@mosip"},"is_alive":"yes"},{"identifier":{"identifier_type":"national_id","identifier_value":"567891011@mosip"},"is_alive":"yes"},{"identifier":{"identifier_type":"national_id","identifier_value":"123456789@mosip"},"is_alive":"yes"},{"identifier":{"identifier_type":"national_id","identifier_value":"987654321@mosip"},"is_alive":"yes"},{"identifier":{"identifier_type":"national_id","identifier_value":"234567890@mosip"},"is_alive":"yes"},{"identifier":{"identifier_type":"national_id","identifier_value":"456789012@mosip"},"is_alive":"no"},{"identifier":{"identifier_type":"national_id","identifier_value":"789012345@mosip"},"is_alive":"no"},{"identifier":{"identifier_type":"national_id","identifier_value":"890123456@mosip"},"is_alive":"no"},{"identifier":{"identifier_type":"national_id","identifier_value":"901234567@mosip"},"is_alive":"no"},{"identifier":{"identifier_type":"national_id","identifier_value":"123457890@mosip"},"is_alive":"no"}]},"pagination":{"page_size":10,"page_number":1,"total_records":15}}'
            application/xml:
              schema:
                $ref: '#/components/schemas/IsAliveCheckResponse'
              examples:
                xmlExample:
                  summary: 'Example xml response'
                  value: |
                    <?xml version="1.0" encoding="UTF-8" ?>
                          <root>
                          	<status>success</status>
                          	<return_message>Data retrieved successfully</return_message>
                          	<correlation_id>123456789020211216223812</correlation_id>
                          	<total_count>20</total_count>
                          	<payload>
                          		<beneficiary>
                          			<identifier>
                          				<identifier_type>national_id</identifier_type>
                          				<identifier_value>345678912@mosip</identifier_value>
                          			</identifier>
                          			<is_alive>yes</is_alive>
                          		</beneficiary>
                          		<beneficiary>
                          			<identifier>
                          				<identifier_type>national_id</identifier_type>
                          				<identifier_value>567891011@mosip</identifier_value>
                          			</identifier>
                          			<is_alive>yes</is_alive>
                          		</beneficiary>
                          		<beneficiary>
                          			<identifier>
                          				<identifier_type>national_id</identifier_type>
                          				<identifier_value>123456789@mosip</identifier_value>
                          			</identifier>
                          			<is_alive>yes</is_alive>
                          		</beneficiary>
                          		<beneficiary>
                          			<identifier>
                          				<identifier_type>national_id</identifier_type>
                          				<identifier_value>987654321@mosip</identifier_value>
                          			</identifier>
                          			<is_alive>yes</is_alive>
                          		</beneficiary>
                          		<beneficiary>
                          			<identifier>
                          				<identifier_type>national_id</identifier_type>
                          				<identifier_value>234567890@mosip</identifier_value>
                          			</identifier>
                          			<is_alive>yes</is_alive>
                          		</beneficiary>
                          		<beneficiary>
                          			<identifier>
                          				<identifier_type>national_id</identifier_type>
                          				<identifier_value>456789012@mosip</identifier_value>
                          			</identifier>
                          			<is_alive>no</is_alive>
                          		</beneficiary>
                          		<beneficiary>
                          			<identifier>
                          				<identifier_type>national_id</identifier_type>
                          				<identifier_value>789012345@mosip</identifier_value>
                          			</identifier>
                          			<is_alive>no</is_alive>
                          		</beneficiary>
                          		<beneficiary>
                          			<identifier>
                          				<identifier_type>national_id</identifier_type>
                          				<identifier_value>890123456@mosip</identifier_value>
                          			</identifier>
                          			<is_alive>no</is_alive>
                          		</beneficiary>
                          		<beneficiary>
                          			<identifier>
                          				<identifier_type>national_id</identifier_type>
                          				<identifier_value>901234567@mosip</identifier_value>
                          			</identifier>
                          			<is_alive>no</is_alive>
                          		</beneficiary>
                          		<beneficiary>
                          			<identifier>
                          				<identifier_type>national_id</identifier_type>
                          				<identifier_value>123457890@mosip</identifier_value>
                          			</identifier>
                          			<is_alive>no</is_alive>
                          		</beneficiary>
                          	</payload>
                          	<pagination>
                          		<page_size>10</page_size>
                          		<page_number>1</page_number>
                          		<total_records>20</total_records>
                          	</pagination>
                          </root>'
              
            application/octet-stream:
              schema:
                type: string
                format: binary                
        '201':
          $ref: './responses.yaml#/components/responses/201'
        '202':
          $ref: './responses.yaml#/components/responses/202'
        '400':
          $ref: './responses.yaml#/components/responses/400'
        '401':
          $ref: './responses.yaml#/components/responses/401'
        '403':
          $ref: './responses.yaml#/components/responses/403'
        '404':
          $ref: './responses.yaml#/components/responses/404'
        '405':
          $ref: './responses.yaml#/components/responses/405'
        '500':
          $ref: './responses.yaml#/components/responses/500' 
      security:
        - x-access-token:
            - read:search
  /getAge:
    post:
      tags:
        - CRVS APIs
      summary: 'API to retrieve the age of a person based on ID'
      description: '' 
      parameters:
        - $ref: "./headers.yaml#/components/parameters/authorization"
      requestBody:
        description: Request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IDRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/IDRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FileUploadRequest'

        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgeResponse'          
            application/xml:
              schema:
                $ref: '#/components/schemas/AgeResponse'
            application/octet-stream:
              schema:
                type: string
                format: binary                
        '201':
          $ref: './responses.yaml#/components/responses/201'
        '202':
          $ref: './responses.yaml#/components/responses/202'

        '400':
          $ref: './responses.yaml#/components/responses/400'
        '401':
          $ref: './responses.yaml#/components/responses/401'
        '403':
          $ref: './responses.yaml#/components/responses/403'
        '404':
          $ref: './responses.yaml#/components/responses/404'
        '405':
          $ref: './responses.yaml#/components/responses/405'
        '500':
          $ref: './responses.yaml#/components/responses/500'  
      security:
        - x-access-token:
            - read:search
  /getMaritalStatus:
    post:
      tags:
        - CRVS APIs
      summary: 'API to retrieve marital status of a person based on ID'
      description: '' 
      parameters:
        - $ref: "./headers.yaml#/components/parameters/authorization"
      requestBody:
        description: Request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IDRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/IDRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FileUploadRequest'

        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MaritalStatusCheckResponse'          
            application/xml:
              schema:
                $ref: '#/components/schemas/MaritalStatusCheckResponse'
            application/octet-stream:
              schema:
                type: string
                format: binary                
        '201':
          $ref: './responses.yaml#/components/responses/201'
        '202':
          $ref: './responses.yaml#/components/responses/202'

        '400':
          $ref: './responses.yaml#/components/responses/400'
        '401':
          $ref: './responses.yaml#/components/responses/401'
        '403':
          $ref: './responses.yaml#/components/responses/403'
        '404':
          $ref: './responses.yaml#/components/responses/404'
        '405':
          $ref: './responses.yaml#/components/responses/405'
        '500':
          $ref: './responses.yaml#/components/responses/500'  
      security:
        - x-access-token:
            - read:search
  /getBirthInfo:
    post:
      tags:
        - CRVS APIs      
      summary: 'API that provides birth information for a person based on ID'
      description: '' 
      parameters:
        - $ref: "./headers.yaml#/components/parameters/authorization"
      requestBody:
        description: Request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IDRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/IDRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FileUploadRequest'
        required: true
      responses:
 
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BirthInfoResponse'          
            application/xml:
              schema:
                $ref: '#/components/schemas/BirthInfoResponse'
            application/octet-stream:
              schema:
                type: string
                format: binary                
        '201':
          $ref: './responses.yaml#/components/responses/201'
        '202':
          $ref: './responses.yaml#/components/responses/202'

        '400':
          $ref: './responses.yaml#/components/responses/400'
        '401':
          $ref: './responses.yaml#/components/responses/401'
        '403':
          $ref: './responses.yaml#/components/responses/403'
        '404':
          $ref: './responses.yaml#/components/responses/404'
        '405':
          $ref: './responses.yaml#/components/responses/405'
        '500':
          $ref: './responses.yaml#/components/responses/500' 
 
      security:
        - x-access-token:
            - read:search
  /getMarriageInfo:
    post:
      tags:
        - CRVS APIs      
      summary: 'API that provides marriage information for a person based on ID'
      description: '' 
      parameters:
        - $ref: "./headers.yaml#/components/parameters/authorization"
      requestBody:
        description: Request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IDRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/IDRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FileUploadRequest'

        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MarriageInfoResponse'          
            application/xml:
              schema:
                $ref: '#/components/schemas/MarriageInfoResponse'
            application/octet-stream:
              schema:
                type: string
                format: binary                

        '201':
          $ref: './responses.yaml#/components/responses/201'
        '202':
          $ref: './responses.yaml#/components/responses/202'

        '400':
          $ref: './responses.yaml#/components/responses/400'
        '401':
          $ref: './responses.yaml#/components/responses/401'
        '403':
          $ref: './responses.yaml#/components/responses/403'
        '404':
          $ref: './responses.yaml#/components/responses/404'
        '405':
          $ref: './responses.yaml#/components/responses/405'
        '500':
          $ref: './responses.yaml#/components/responses/500'  
      security:
        - x-access-token:
            - read:search
  /getDeathInfo:
    post:
      tags:
        - CRVS APIs      
      summary: 'API that provides death information for a person based on ID'
      description: '' 
      parameters:
        - $ref: "./headers.yaml#/components/parameters/authorization"
      requestBody:
        description: Request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IDRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/IDRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FileUploadRequest'

        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeathInfoResponse'          
            application/xml:
              schema:
                $ref: '#/components/schemas/DeathInfoResponse'
            application/octet-stream:
              schema:
                type: string
                format: binary                

        '201':
          $ref: './responses.yaml#/components/responses/201'
        '202':
          $ref: './responses.yaml#/components/responses/201'

        '400':
          $ref: './responses.yaml#/components/responses/400'
        '401':
          $ref: './responses.yaml#/components/responses/401'
        '403':
          $ref: './responses.yaml#/components/responses/403'
        '404':
          $ref: './responses.yaml#/components/responses/404'
        '405':
          $ref: './responses.yaml#/components/responses/405'
        '500':
          $ref: './responses.yaml#/components/responses/500' 
      security:
        - x-access-token:
            - read:search
  /getPersonInfo:
    post:
      tags:
        - CRVS APIs      
      summary: 'API that provides person info based on an ID'
      description:  ''
      parameters:
        - $ref: "./headers.yaml#/components/parameters/authorization"
      requestBody:
        description: Request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IDRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/IDRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FileUploadRequest'

        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IDInfoLookupResponse'          
            application/xml:
              schema:
                $ref: '#/components/schemas/IDInfoLookupResponse'
            application/octet-stream:
              schema:
                type: string
                format: binary                

        '201':
          $ref: './responses.yaml#/components/responses/201'
        '202':
          $ref: './responses.yaml#/components/responses/202'

        '400':
          $ref: './responses.yaml#/components/responses/400'
        '401':
          $ref: './responses.yaml#/components/responses/401'
        '403':
          $ref: './responses.yaml#/components/responses/403'
        '404':
          $ref: './responses.yaml#/components/responses/404'
        '405':
          $ref: './responses.yaml#/components/responses/405'
        '500':
          $ref: './responses.yaml#/components/responses/500' 
      security:
        - x-access-token:
            - read:search
  /getParentInfo:
    post:
      tags:
        - CRVS APIs      
      summary: 'API that provides parents information of a person based on an ID'
      description:  ''
      parameters:
        - $ref: "./headers.yaml#/components/parameters/authorization"
      requestBody:
        description: Request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IDRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/IDRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FileUploadRequest'

        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChildDemographicResponse'          
            application/xml:
              schema:
                $ref: '#/components/schemas/ChildDemographicResponse'
            application/octet-stream:
              schema:
                type: string
                format: binary                

        '201':
          $ref: './responses.yaml#/components/responses/201'
        '202':
          $ref: './responses.yaml#/components/responses/202'

        '400':
          $ref: './responses.yaml#/components/responses/400'
        '401':
          $ref: './responses.yaml#/components/responses/401'
        '403':
          $ref: './responses.yaml#/components/responses/403'
        '404':
          $ref: './responses.yaml#/components/responses/404'
        '405':
          $ref: './responses.yaml#/components/responses/405'
        '500':
          $ref: './responses.yaml#/components/responses/500' 
      security:
        - x-access-token:
            - read:search
  /getFamilyinfo:
    post:
      tags:
        - CRVS APIs      
      summary: "The API retrieves family information, and the caller is required to provide either the father's or the mother's unique identification details"
      description:  ''
      parameters:
        - $ref: "./headers.yaml#/components/parameters/authorization"
      requestBody:
        description: Request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetChildInfoRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/GetChildInfoRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FileUploadRequest'

        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetChildInfoResponse'          
            application/xml:
              schema:
                $ref: '#/components/schemas/GetChildInfoResponse'
            application/octet-stream:
              schema:
                type: string
                format: binary                

        '201':
          $ref: './responses.yaml#/components/responses/201'
        '202':
          $ref: './responses.yaml#/components/responses/202'

        '400':
          $ref: './responses.yaml#/components/responses/400'
        '401':
          $ref: './responses.yaml#/components/responses/401'
        '403':
          $ref: './responses.yaml#/components/responses/403'
        '404':
          $ref: './responses.yaml#/components/responses/404'
        '405':
          $ref: './responses.yaml#/components/responses/405'
        '500':
          $ref: './responses.yaml#/components/responses/500'  
      security:
        - x-access-token:
            - read:search
  /getVitalEventDates:
    post:
      tags:
        - CRVS APIs
      summary: 'API that provides date of birth/date of death/marriage date based on ID'
      description: ''
      parameters:
        - $ref: "./headers.yaml#/components/parameters/authorization"
      requestBody:
        description: Request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IDRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/IDRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FileUploadRequest'
              
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IDEventDatesResponse'          
            application/xml:
              schema:
                $ref: '#/components/schemas/IDEventDatesResponse'
            application/octet-stream:
              schema:
                type: string
                format: binary                

        '201':
          $ref: './responses.yaml#/components/responses/201'
        '202':
          $ref: './responses.yaml#/components/responses/202'

        '400':
          $ref: './responses.yaml#/components/responses/400'
        '401':
          $ref: './responses.yaml#/components/responses/401'
        '403':
          $ref: './responses.yaml#/components/responses/403'
        '404':
          $ref: './responses.yaml#/components/responses/404'
        '405':
          $ref: './responses.yaml#/components/responses/405'
        '500':
          $ref: './responses.yaml#/components/responses/500' 
      security:
        - x-access-token:
            - read:search
  /getVitalEvents:
    post:
      tags:
        - CRVS APIs
      summary: 'API that provides life event details based on vital event type and data retrieved based on ID of person'
      description: ''
      parameters:
        - $ref: "./headers.yaml#/components/parameters/authorization"
      requestBody:
        description: Request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventInfoRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/EventInfoRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FileUploadRequest'
              
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventInfoResponse'  
            application/xml:
              schema:
                $ref: '#/components/schemas/EventInfoResponse'
            application/octet-stream:
              schema:
                type: string
                format: binary                
        '201':
          $ref: './responses.yaml#/components/responses/201'
        '202':
          $ref: './responses.yaml#/components/responses/202'

        '400':
          $ref: './responses.yaml#/components/responses/400'
        '401':
          $ref: './responses.yaml#/components/responses/401'
        '403':
          $ref: './responses.yaml#/components/responses/403'
        '404':
          $ref: './responses.yaml#/components/responses/404'
        '405':
          $ref: './responses.yaml#/components/responses/405'
        '500':
          $ref: './responses.yaml#/components/responses/500'
      security:
        - x-access-token:
            - read:search

  /query:
    get:
      tags:
        - Query APIs 
      summary: ''
      description: ''
      operationId: ''
      parameters:
        - $ref: "./headers.yaml#/components/parameters/authorization"
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema: 
                type: array
                example: ['is_alive','get_age','get_marital_status','get_birth_info','get_marriage_info','get_death_info','get_person_info','get_parent_info','get_vital_event_dates','get_vital_events']
                items:
                  type: string

      security:
        - x-access-token:
            - read:search
    post:
      tags:
        - Query APIs 
      summary: ''
      description: ''
      operationId: ''
      parameters:
        - $ref: "./headers.yaml#/components/parameters/authorization"
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryRequest'     
          application/xml:
            schema:
              $ref: '#/components/schemas/QueryRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FileUploadRequest'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryResponse'     
            application/xml:
              schema:
                $ref: '#/components/schemas/QueryResponse'
            application/octet-stream:
              schema:
                type: string
                format: binary                
        '201':
          $ref: './responses.yaml#/components/responses/201'
        '202':
          $ref: './responses.yaml#/components/responses/202'
        '400':
          $ref: './responses.yaml#/components/responses/400'
        '401':
          $ref: './responses.yaml#/components/responses/401'
        '403':
          $ref: './responses.yaml#/components/responses/403'
        '404':
          $ref: './responses.yaml#/components/responses/404'
        '405':
          $ref: './responses.yaml#/components/responses/405'
        '500':
          $ref: './responses.yaml#/components/responses/500' 
      security:
        - x-access-token:
            - read:search
  /on-query:
    post:
      tags:
        - Query APIs 
      summary: ''
      description: ''
      operationId: ''
      parameters:
        - $ref: "./headers.yaml#/components/parameters/authorization"
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryResponse'     
          application/xml:
            schema:
              $ref: '#/components/schemas/QueryResponse'  
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FileUploadRequest'

        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: './responses.yaml#/components/schemas/BaseResponse'     
            application/xml:
              schema:
                $ref: './responses.yaml#/components/schemas/BaseResponse'
        '201':
          $ref: './responses.yaml#/components/responses/201'
        '202':
          $ref: './responses.yaml#/components/responses/202'

        '400':
          $ref: './responses.yaml#/components/responses/400'
        '401':
          $ref: './responses.yaml#/components/responses/401'
        '403':
          $ref: './responses.yaml#/components/responses/403'
        '404':
          $ref: './responses.yaml#/components/responses/404'
        '405':
          $ref: './responses.yaml#/components/responses/405'
        '500':
          $ref: './responses.yaml#/components/responses/500' 
             
      security:
        - x-access-token:
            - read:search
  
components:
  schemas:
    IsAliveCheckRequest:
      allOf:
        - $ref: './common.yaml#/components/schemas/AsyncBaseRequestObject'
      type: object
      properties:
        payload:
          type: object
          properties:
            beneficiary:
              type: array
              items:
                anyOf:
                  - $ref: './common.yaml#/components/schemas/Identifier'
        sortby:
          $ref: '#/components/schemas/Sort'
        pagination:
          $ref: '#/components/schemas/Pagination'
    IsAliveCheckResponse:
      allOf:
        - $ref: './responses.yaml#/components/schemas/ApiResponse'
      type: object
      properties:
        payload:
          type: object
          properties:
            beneficiary:
              type: array
              items:
                anyOf:
                  - $ref: '#/components/schemas/IsAliveCheckObject'
        pagination:
          $ref: '#/components/schemas/PaginationInfoInResponse'
    IsAliveCheckObject:
      type: object
      properties:
        identifier:
          $ref: './common.yaml#/components/schemas/Identifier'
        is_alive:
          type: string
          enum: [yes,no]
    IDRequest:
      allOf:
        - $ref: './common.yaml#/components/schemas/AsyncBaseRequestObject'
      type: object
      properties:
        payload:
          type: object
          properties:
            beneficiary:
              type: array
              items:
                anyOf:
                  - $ref: './common.yaml#/components/schemas/Identifier' 
    GetChildInfoRequest:
      allOf:
        - $ref: './common.yaml#/components/schemas/AsyncBaseRequestObject'
      type: object
      properties:
        payload:
          type: object
          properties:
            parent_ids:
              type: array
              items:
                anyOf:
                  - $ref: '#/components/schemas/GetChildInfoRequestObject'       
    GetChildInfoRequestObject:
      type: object
      properties:
        father_indentifier:
          $ref: './common.yaml#/components/schemas/Identifier'
        mother_indentifier:
          $ref: './common.yaml#/components/schemas/Identifier'

    BirthInfoResponse:
      allOf:
        - $ref: './responses.yaml#/components/schemas/ApiResponse'
      type: object
      properties:
        payload:
          type: object
          properties:
            beneficiary:
              type: array
              items:
                anyOf:
                  - $ref: '#/components/schemas/BirthInfo' 
    DeathInfoResponse:
      allOf:
        - $ref: './responses.yaml#/components/schemas/ApiResponse'
      type: object
      properties:
        payload:
          type: object
          properties:
            beneficiary:
              type: array
              items:
                anyOf:
                  - $ref: '#/components/schemas/DeathInfo'       
    EventInfoRequest:
      allOf:
        - $ref: './common.yaml#/components/schemas/AsyncBaseRequestObject'
      type: object
      properties:
        payload:
          type: object
          properties:
            beneficiary:
              type: array
              items:
                anyOf:
                  - $ref: '#/components/schemas/EventInfoRequestObject'       

    
    EventInfoResponse:
      allOf:
        - $ref: './responses.yaml#/components/schemas/ApiResponse'
      type: object
      properties:
        payload:
          type: object
          properties:
            beneficiary:
              type: array
              items:
                anyOf:
                  - $ref: '#/components/schemas/EventInfoResponseObject'              
    EventInfoResponseObject:
      type: object
      properties:
        vital_event:
          type: string
          example: ''
          enum: ['birth','death','marriage']
        vital_event_data:
          type: array
          items:
            anyOf:
              - $ref: '#/components/schemas/BirthInfo'
              - $ref: '#/components/schemas/DeathInfo'
              - $ref: '#/components/schemas/MarriageInfoObject'
    BirthInfo:
      type: object
      properties:
        identifier:
          $ref: './common.yaml#/components/schemas/Identifier'
        name:
          $ref: './common.yaml#/components/schemas/HumanName'
        father_name:
          $ref: './common.yaml#/components/schemas/HumanName'
        mother_name:
          $ref: './common.yaml#/components/schemas/HumanName'
        contactno:
          type: string
          example: ''
        date_of_birth:
          $ref: './common.yaml#/components/schemas/DateObject'
        gender:
          type: string
          example: ''
          enum: ['0|Never Married','1|Male','2|Female','3|Not applicable']          
        birth_registration_no:
          type: string
          example: ''
        birth_place_address:
          $ref: './common.yaml#/components/schemas/Address'
          
    DeathInfo:
      type: object
      properties:
        identifier:
          $ref: './common.yaml#/components/schemas/Identifier'
        name:
          $ref: './common.yaml#/components/schemas/HumanName'
        contactno:
          type: string
          example: ''
        date_of_death:
          $ref: './common.yaml#/components/schemas/DateObject'
        gender:
          type: string
          example: ''
          enum: ['0|Never Married','1|Male','2|Female','3|Not applicable']             
        death_registration_no:
          type: string
          example: ''
        death_place_address:
          $ref: './common.yaml#/components/schemas/Address'
    EventInfoRequestObject:
      type: object
      properties:
        identifier:
          $ref: './common.yaml#/components/schemas/Identifier'
        vital_event:
          type: string
          example: ''
          enum: ['birth','death','marriage']
    IDEventDatesResponse:
      allOf:
        - $ref: './responses.yaml#/components/schemas/ApiResponse'
      type: object
      properties:
        payload:
          type: array
          items:
            type: object
            anyOf:
              - $ref: '#/components/schemas/Event'              
    Event:
      type: object
      properties:
        event:
          type: array
          items:
            $ref: '#/components/schemas/IDEventDatesObject'
    IDEventDatesObject:
      type: object
      properties:
        identifier:
          $ref: './common.yaml#/components/schemas/Identifier'
        name:
          $ref: './common.yaml#/components/schemas/HumanName'
        contactno:
          type: string
          example: ''
        date_of_birth:
          $ref: './common.yaml#/components/schemas/DateObject'
        date_of_death:
          $ref: './common.yaml#/components/schemas/DateObject'
        date_of_marriage:
          $ref: './common.yaml#/components/schemas/DateObject'
        gender:
          type: string
          example: ''
          enum: ['0|Never Married','1|Male','2|Female','3|Not applicable']          
 
    IDInfoLookupResponse:
      allOf:
        - $ref: './responses.yaml#/components/schemas/ApiResponse'
      type: object
      properties:
        payload:
          type: object
          properties:
            beneficiary:
              type: array
              items:
                anyOf:
                  - $ref: '#/components/schemas/IDInfoLookupObject' 
    IDInfoLookupObject:
      type: object
      properties:
        identifier:
          $ref: './common.yaml#/components/schemas/Identifier'
        name:
          $ref: './common.yaml#/components/schemas/HumanName'
        contactno:
          type: string
          example: ''
        date_of_birth:
          $ref: './common.yaml#/components/schemas/DateObject'
        gender:
          type: string
          example: ''
          enum: ['0|Never Married','1|Male','2|Female','3|Not applicable']          

    ChildDemographicResponse:
      allOf:
        - $ref: './responses.yaml#/components/schemas/ApiResponse'
      type: object
      properties:
        payload:
          type: object
          properties:
            beneficiary:
              type: array
              items:
                anyOf:
                  - $ref: '#/components/schemas/ChildDemographicObject'              
    ChildDemographicObject:
      type: object
      properties:
        identifier:
          $ref: './common.yaml#/components/schemas/Identifier'
        name:
          $ref: './common.yaml#/components/schemas/HumanName'
        father_name:
          $ref: './common.yaml#/components/schemas/HumanName'
        mother_name:
          $ref: './common.yaml#/components/schemas/HumanName'
        contactno:
          type: string
          example: ''
        date_of_birth:
          $ref: './common.yaml#/components/schemas/DateObject'
        date_of_death:
          $ref: './common.yaml#/components/schemas/DateObject'
        gender:
          type: string
          example: ''
          enum: ['0|Never Married','1|Male','2|Female','3|Not applicable']          
    AgeResponse:
      allOf:
        - $ref: './responses.yaml#/components/schemas/ApiResponse'
      type: object
      properties:
        payload:
          type: object
          properties:
            beneficiary:
              type: array
              items:
                anyOf:
                  - $ref: '#/components/schemas/CategoryCheckObject'              
    CategoryCheckObject:
      type: object
      properties:
        identifier:
          $ref: './common.yaml#/components/schemas/Identifier'
        age:
          type: number
          example: ''

    MaritalStatusCheckResponse:
      allOf:
        - $ref: './responses.yaml#/components/schemas/ApiResponse'
      type: object
      properties:
        payload:
          type: object
          properties:
            beneficiary:
              type: array
              items:
                anyOf:
                  - $ref: '#/components/schemas/MaritalStatusCheckObject' 
    MaritalStatusCheckObject:
      type: object
      properties:
        identifier:
          $ref: './common.yaml#/components/schemas/Identifier'
        marital_status:
          type: string
          example: ''
          enum: ['1|Never Married','2|Currently Married','3|Widow / Widower','4|Divorced','5|Separated']
 
    MarriageInfoResponse:
      allOf:
        - $ref: './responses.yaml#/components/schemas/ApiResponse'
      type: object
      properties:
        payload:
          type: object
          properties:
            beneficiary:
              type: array
              items:
                anyOf:
                  - $ref: '#/components/schemas/MarriageInfoObject' 
    MarriageInfoObject:
      type: object
      properties:
        groom_identifier:
          type: array
          items:
            anyOf:
              - $ref: './common.yaml#/components/schemas/Identifier'         
        groom_name:
          $ref: './common.yaml#/components/schemas/HumanName'
        groom_nationality:
          type: string
          example: ''
        groom_date_of_birth:
          $ref: './common.yaml#/components/schemas/DateObject'
        bride_identifier:
          type: array
          items:
            allOf:
              - $ref: './common.yaml#/components/schemas/Identifier'
              - $ref: './common.yaml#/components/schemas/Identifier'
        bride_name:
          $ref: './common.yaml#/components/schemas/HumanName'
        bride_nationality:
          type: string
          example: ''
        bride_date_of_birth:
          $ref: './common.yaml#/components/schemas/DateObject'
        date_of_marriage:
          $ref: './common.yaml#/components/schemas/DateObject'
        place_of_marriage:
          $ref: './common.yaml#/components/schemas/Address'
        marriage_registration_number:
          type: string
          example: ''     
    GetChildInfoResponse:
      allOf:
        - $ref: './responses.yaml#/components/schemas/ApiResponse'
      type: object
      properties:
        payload:
          type: array
          items:
            type: object
            anyOf:
              - $ref: '#/components/schemas/GetChildInfoResponseObject'
    GetChildInfoResponseObject:
      type: object
      properties:
        child:
          type: array
          items:
            $ref: '#/components/schemas/ChildInfo'
    ChildInfo:
      type: object
      properties:
        identifier:
          $ref: './common.yaml#/components/schemas/Identifier'
        name:
          $ref: './common.yaml#/components/schemas/HumanName'
        date_of_birth:
          $ref: './common.yaml#/components/schemas/DateObject'
        gender:
          type: string
          example: ''
          enum: ['0|Never Married','1|Male','2|Female','3|Not applicable']          
        birth_registration_no:
          type: string
          example: ''
        birth_place_address:
          $ref: './common.yaml#/components/schemas/Address'

    SearchRequestObject:
      allOf:
        - $ref: './common.yaml#/components/schemas/AsyncBaseRequestObject'
      type: object
      properties:
        payload:
          type: object
          properties:
            transaction_id:
              $ref : './common.yaml#/components/schemas/TransactionId'
            identifiers:
              type: array
              items:
                anyOf:
                  - $ref: './common.yaml#/components/schemas/Identifier'
            demographic:
              $ref : '#/components/schemas/SearchCriteria'
            custom_query:
              type: array
              items:
                anyOf:
                  - $ref: '#/components/schemas/NameField'
                  - $ref: '#/components/schemas/ExpressionAnd'
                  - $ref: '#/components/schemas/Repositories'
            sortby:
              $ref: '#/components/schemas/Sort'
            pagination:
              $ref: '#/components/schemas/Pagination'

    SearchCriteria:
      type: object
      properties:
        name:
          type: string
          example: ''
        given_name:
          type: string
          example: ''
        family_name:
          type: string
          example: ''
        middle_name:
          type: string
          example: ''
        gender:
          type: string
          example: ''
        birthdate:
          type: string
          example: ''
        place_of_birth:
          type: string
          example: ''
        status:
          type: string
          example: ''
        nationality:
          type: string
          example: ''
        attributes:
          type: array
          items:
            anyOf:
              - $ref: '#/components/schemas/Attribute'
            
    Attribute:
      type: object
      properties:
        name:
          type: string
          example: 'attribute name'
        value:
          type: string
          example: 'attribute value'

    ExpressionAnd:
      type: object
      properties:
        expression:
          type: string
          enum: [and]
        
    NameField:
      description: 'Search by name'        
      allOf: 
        - type: object
          required:
            - fieldname
            - value
          properties: 
            fieldname:
              type: string
              example: ''
              enum: ['firstname']
            operator:
              $ref: '#/components/schemas/FieldOperatorAnd'
            value: 
              type: string
              example: ''
              description: 'Search by firstname'
 
    Repositories:
      allOf: 
        - type: object
          required:
            - fieldname
            - value
          properties: 
            fieldname:
              type: string
              example: ''
              enum: ['repository_type']
            operator:
              $ref: '#/components/schemas/FieldOperatorAnd'
            value: 
              type: string
              example: ''
              enum: ['Birth', 'Death', 'Marriage']
              description: 'Search by repository_type type'
 
    FieldOperatorAnd:
      type: string
      enum:
        - and
    Sort:
      type: object
      properties:
        fieldname:
          type: string
          example: ''
          enum: [firstname,dob]
        order:
          type: string
          example: ''
          enum: ["asc","desc"]
    Pagination:
      type: object
      properties:
        page_size:
          type: number
          example: 10
        page_n./responses.yaml#/components/schemas/BaseResponseumber:
          type: number
          example: 1  
    PaginationInfoInResponse:
      type: object
      properties:
        page_size:
          type: number
          example: 10
        page_number:
          type: number
          example: 1
        total_records:
          type: number
          example: 20
          
    EventResponse:
      type: object
      properties:
        event_status:
          type: array
          items:
            anyOf:
              - $ref: './responses.yaml#/components/schemas/BaseResponse'
         
    SearchResponse:
      allOf:
        - $ref: './responses.yaml#/components/schemas/BaseResponse'
      type: object
      properties:
        payload: 
          type: array
          items:
            anyOf:
              - $ref: '#/components/schemas/SearchResponseObjectArray'
    SearchResponseObjectArray:
      type: object
      properties:
        beneficiary: 
          type: array
          items:
            anyOf:
              - $ref: '#/components/schemas/SearchResponseObject'
    SearchResponseObject:
      type: object
      properties:
        identifiers:
          type: object
          properties:
            identifier:
              $ref: './common.yaml#/components/schemas/Identifier'
        name:
          $ref: './common.yaml#/components/schemas/HumanName'
        contactno:
          $ref : './common.yaml#/components/schemas/DateObject'
        date_of_birth:
          $ref : './common.yaml#/components/schemas/DateObject'
        date_of_death:
          $ref : './common.yaml#/components/schemas/DateObject'
        gender:
          type: string
          example: ''
          enum: ['1|male','2|female','3|transgender']
    FileUploadRequest:
      type: object
      properties:
        file_name:
          type: string
          format: binary
        file_type:
          type: string
          example: csv
          enum: [json,csv,xml]
        message_id:
          type: string 

    QueryRequest:
      allOf:
        - $ref: './common.yaml#/components/schemas/AsyncBaseRequestObject'
      type: object
      description: '' 
      properties:
        payload:
          type: array
          items:
            type: object
            anyOf:
              - $ref: '#/components/schemas/QueryRequestObject'              
    QueryRequestObject:
      type: object
      properties:
        query_object:
          type: array
          items:
            $ref: '#/components/schemas/Query'    
    Query:  
      type: object
      description: '' 
      properties:
        type:
          type: string
          example: ''
        value:
          type: string
          example: ''
        query:
          type: string
          example: ''
    QueryResponse:
      allOf:
        - $ref: './responses.yaml#/components/schemas/BaseResponse'
      type: object
      description: '' 
      properties:
        payload:
          type: array
          items:
            type: object
            anyOf:
              - $ref: '#/components/schemas/QueryResponseObject'            
    QueryResponseObject:
      type: object
      properties:
        query_data:
          type: array
          items:
            $ref: '#/components/schemas/QueryResObject'
    QueryResObject:
      type: object
      properties:
        query:
          $ref: '#/components/schemas/Query'
        result:
          type: array
          items:
            anyOf:
              - $ref: '#/components/schemas/KeyValueMap'
    KeyValueMap:
      type: object
      properties:
        key: 
          type: string
          example: ''
        value: 
          type: string
          example: ''

    RequestStatusCheckRequest:
      allOf:
        - $ref: './common.yaml#/components/schemas/AsyncBaseRequestObject'
      type: object
      properties:
        payload:
          type: object
          properties:
            request_ids:
              type: array
              example: ''
              items:
                anyOf:
                  - $ref: '#/components/schemas/RequestIdObject'
    RequestIdObject:
      type: object
      properties:
        message_id:
          type: string
          example: ''
    RequestStatusObject:
      type: object
      properties:
        correlation_id:
          type: string
          example: ''
        status:
          type: string
          example: ''
          enum: ['received','processing','processed','failed','invalid_request_id']
    RequestStatusCheckResponse:
      type: object
      properties:
        payload:
          type: array
          items:
            type: object
            anyOf:
              - $ref: '#/components/schemas/RequestStatusObjectList'
    RequestStatusObjectList:
      type: object
      properties:
        status:
          type: array
          items:
            $ref: '#/components/schemas/RequestStatusObject'
            


    UnSubscribeRequest:
      allOf:
        - $ref: './common.yaml#/components/schemas/BaseRequestObject'        
      type: object
      properties:
        payload:
          type: object
          properties:
            event_code:
              type: array
              items:
                type: string
              example: ["BIRTH_REGISTRATION", "DEATH_REGISTRATION","MARRIAGE_REGISTRATION","DIVORCE_REGISTRATION","DEMOGRAPHIC_UPDATE"]
              description: 'To subscribe this event send this code in subscription request'
            client_id:
              type: string
              example: ''
            reason:
              type: string  
              example: ''

    UnSubscribeResponse:
      allOf:
        - $ref: './responses.yaml#/components/schemas/BaseResponse'
      type: object
      properties:
        payload: 
          type: array
          items:
            $ref: '#/components/schemas/UnSubscribeObjectList'
    UnSubscribeObjectList:
      type: object
      properties:
        event:
          type: array
          items:
            $ref: './subscriptions.yaml#/components/schemas/SubscriptionObject'            
    EventNotificationRequest:
      type: object
      properties:
        success:
          type: string
          example: ''
        return_message:
          type: string
          example: ''
        error_code:
          type: string
          example: ''        
        corellation_id:
          type: string
          example: ''
          description: The corellation_id received in request
        payload: 
          type: array
          items:
            anyOf:
              - $ref: '#/components/schemas/BirthRegistrationEventInfo'
              - $ref: '#/components/schemas/MarriageRegistrationEventInfo'
              - $ref: '#/components/schemas/DeathRegistrationEventInfo'          
 
    BirthRegistrationEventInfo:
      type: object
      properties:
        event_code:
          type: string
          example: ''
          enum: ["BIRTH_REGISTRATION"]
        correlation_id:
          type: string
          example: ''
          description: The transaction_id received in request
        event_data:
          $ref : '#/components/schemas/CRVSSearchByBRNResponse'
    MarriageRegistrationEventInfo:
      type: object
      properties:
        event_code:
          type: string
          example: ''
          enum: ["MARRIAGE_REGISTRATION"]
        correlation_id:
          type: string
          example: ''
          description: The transaction_id received in request
        event_data:
          $ref : '#/components/schemas/CRVSSearchByMRNResponse'    
    CRVSSearchByMRNResponse:
      type: object
      properties:
        groom_identifier:
          type: array
          items:
            allOf:
              - $ref: './common.yaml#/components/schemas/Identifier'
              - $ref: './common.yaml#/components/schemas/Identifier'
        groom_name:
          $ref: './common.yaml#/components/schemas/HumanName'
        groom_father_name:
          $ref: './common.yaml#/components/schemas/HumanName'
        groom_mother_name:
          $ref: './common.yaml#/components/schemas/HumanName'
        groom_nationality:
          type: string
          example: ''
        groom_date_of_birth:
          type: string
          example: ''        
        groom_marital_status:
          type: string
          example: ''
          enum: [unmarried,divorced,widowed]
        bride_identifier:
          type: array
          items:
            allOf:
              - $ref: './common.yaml#/components/schemas/Identifier'
              - $ref: './common.yaml#/components/schemas/Identifier'
        bride_name:
          $ref: './common.yaml#/components/schemas/HumanName'
        bride_father_name:
          $ref: './common.yaml#/components/schemas/HumanName'
        bride_mother_name:
          $ref: './common.yaml#/components/schemas/HumanName'
        bride_nationality:
          type: string
          example: ''
        bride_date_of_birth:
          $ref : './common.yaml#/components/schemas/DateObject'
        bride_marital_status:
          type: string
          example: ''
          enum: [unmarried,divorced,widowed]
        contactno:
          type: string
          example: ''
        date_of_marriage:
          $ref : './common.yaml#/components/schemas/DateObject'
        place_of_marriage:
          type: string
          example: ''
        marriage_registration_number:
          type: string
          example: ''

    DeathRegistrationEventInfo:
      type: object
      properties:
        event_code:
          type: string
          example: ''
          enum: ["DEATH_REGISTRATION"]
        event_data:
          $ref : '#/components/schemas/CRVSSearchByDRNResponse'    
    CRVSSearchByBRNResponse:
      type: object
      properties:
        identifier:
          type: array
          items:
            allOf:
              - $ref: './common.yaml#/components/schemas/Identifier'
              - $ref: './common.yaml#/components/schemas/Identifier'
        name:
          $ref: './common.yaml#/components/schemas/HumanName'
        father_name:
          $ref: './common.yaml#/components/schemas/HumanName'
        mother_name:
          $ref: './common.yaml#/components/schemas/HumanName'
        contactno:
          type: string
        date_of_birth:
          type: string
          example: ''
        date_of_death:
          type: string
          example: ''
        gender:
          type: string
          example: ''          
        birth_registration_number:
          type: string
          example: ''
        death_registration_number:
          type: string            
          example: ''
    CRVSSearchByDRNResponse:
      type: object
      properties:
        identifier:
          type: array
          items:
            allOf:
              - $ref: './common.yaml#/components/schemas/Identifier'
        name:
          $ref: './common.yaml#/components/schemas/HumanName'
        father_name:
          $ref: './common.yaml#/components/schemas/HumanName'
        mother_name:
          $ref: './common.yaml#/components/schemas/HumanName'
        contactno:
          type: string
          example: ''
        date_of_birth:
          type: string
          example: ''
        date_of_death:
          type: string
          example: ''
        gender:
          type: string
          example: ''
        birth_registration_number:
          type: string
          example: ''
        death_registration_number:
          type: string
          example: '' 

  securitySchemes:
    x-access-token:
      type: http
      scheme: bearer
      bearerFormat: jwt
      description: Authenticating using session token issued by platform/system API gateway or auth services issuing session token APIs using client id & secret      