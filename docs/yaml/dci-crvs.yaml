openapi: 3.0.3
info:
  title: CRVS Search APIs
  description: ''
  version: 0.0.1
servers:
  # Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/ahi-dev-dc/APIDoc/0.0.1
  - description: Gateway endpoint
    url: https://localhost:8081/

tags:
  - name: Search API
    description: '' 
  - name: Eligibility determination API
    description: ''
  - name: Event subscription
    description: 'The event subscription APIs facilate to get notification when any event happens in crvs registry, The client application meed to register for each event seperately with provided client id and client secret'
paths:
  /v1/search:
    post:
      tags:
        - Search API
      summary: To perform search operation in registry
      description: The Search operation perfromed for registry 
      parameters:
        - $ref: "#/components/parameters/version"
        - $ref: "#/components/parameters/x-hmac"
        - $ref: "#/components/parameters/authorization"
        - $ref: '#/components/parameters/x-registry-type'
        - $ref: '#/components/parameters/x-message-id'
        - $ref: '#/components/parameters/x-timestamp'
        - $ref: '#/components/parameters/x-sender-id'
        - $ref: '#/components/parameters/x-async'
        - $ref: '#/components/parameters/x-callbackendpoint'
      requestBody:
        description: Search request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchRequest'     
        required: true
      responses:
        '102':
          description: Processing 
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'          
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorResponse' 
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorResponse' 
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorResponse' 
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorResponse' 
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorResponse'
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorResponse' 
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorResponse' 
      security:
        - spmis_auth:
            - read:search
  /v1/on-search:
    post:
      tags:
        - Search API 
      summary: Search request call back, if callback URL empty then save response at server end respond with data when requested
      description: The requester will pass information submitted in search and if response prepared then it will send content
      parameters:
        - $ref: "#/components/parameters/version"
        - $ref: "#/components/parameters/authorization"
        - $ref: '#/components/parameters/x-registry-type'
        - $ref: '#/components/parameters/x-message-id'
        - $ref: '#/components/parameters/x-timestamp'
        - $ref: '#/components/parameters/x-sender-id'
      requestBody:
        description: Search request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchRequest'     
        required: true
      responses:
        '102':
          description: Processing 
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'          
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorResponse' 
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorResponse' 
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorResponse' 
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorResponse' 
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorResponse'
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorResponse' 
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorResponse' 
      security:
        - spmis_auth:
            - read:search
  /eligibility-determination:
    get:
      tags:
        - Eligibility determination API 
      summary: Get list of eligibility determination supported by registry
      description: ''
      operationId: ''
      parameters:
        - $ref: "#/components/parameters/version"
        - $ref: "#/components/parameters/x-hmac"
        - $ref: "#/components/parameters/authorization"
        - $ref: '#/components/parameters/x-registry-type'
        - $ref: '#/components/parameters/x-message-id'
        - $ref: '#/components/parameters/x-timestamp'
        - $ref: '#/components/parameters/x-sender-id'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema: 
                type: array
                example: '[
                          {
                            "eligibility_check_type": "IS_ALIVE",
                            "response_format": "json"
                          }
                        ]'
                items:
                  allOf:
                    - $ref: '#/components/schemas/IsAliveEligibility'
      security:
        - spmis_auth:
            - read:claims
    post:
      tags:
        - Eligibility determination API 
      summary: To get information of claim for person
      description: Response will contain claim details
      operationId: ''
      parameters:
        - $ref: "#/components/parameters/version"
        - $ref: "#/components/parameters/x-hmac"
        - $ref: "#/components/parameters/authorization"
        - $ref: '#/components/parameters/x-registry-type'
        - $ref: '#/components/parameters/x-message-id'
        - $ref: '#/components/parameters/x-timestamp'
        - $ref: '#/components/parameters/x-sender-id'
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EligibilityDeterminationRequest'     
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EligibilityDeterminationResponse'     
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorResponse' 
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorResponse' 
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorResponse' 
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorResponse' 
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorResponse'
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorResponse' 
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorResponse'                 
      security:
        - spmis_auth:
            - read:relationships

  /subscription-list:
    get:
      tags:
        - Event subscription 
      summary: Get list of supported events in registry
      parameters:
        - $ref: "#/components/parameters/version"
        - $ref: "#/components/parameters/x-hmac"
        - $ref: "#/components/parameters/authorization"
        - $ref: '#/components/parameters/x-registry-type'
        - $ref: '#/components/parameters/x-message-id'
        - $ref: '#/components/parameters/x-timestamp'
        - $ref: '#/components/parameters/x-sender-id'
        - $ref: '#/components/parameters/x-async'
        - $ref: '#/components/parameters/x-callbackendpoint'
      description: ''
      operationId: ''
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema: 
                type: array
                items:
                  $ref: '#/components/schemas/SupportedEvents'          
      security:
        - spmis_auth:
            - read:eligibity
  /subscribe:
    post:
      tags:
        - Event subscription  
      summary: To subscribe for specific event
      description: Response will contain eligibity details
      operationId: ''
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubscriptionRequest'     
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionResponse'     
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorResponse' 
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorResponse' 
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorResponse' 
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorResponse' 
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorResponse'
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorResponse' 
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorResponse'                 
      security:
        - spmis_auth:
            - read:relationships
  /unsubscribe:
    post:
      tags:
        - Event subscription  
      summary: To un-subscribe for specific event
      description: Response will contain list of subscribed events
      operationId: ''
      requestBody:
        description: 'Request to un-subscribe'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnSubscribeRequest'     
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionResponse'     
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorResponse' 
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorResponse' 
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorResponse' 
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorResponse' 
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorResponse'
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorResponse' 
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorResponse'                 
      security:
        - spmis_auth:
            - read:relationships


components:
  parameters:
    authorization:
      name: Authorization
      in: header
      required: true
      description: Access token which was issued after successful login with gateway auth server.
      schema:
        type: string
        example: Bearer <...>        
    version:
      in: header
      name: x-api-version
      schema:
        type: string
        example: "1.0.0"
      required: false
      description: If not provided use latest api version as default
    x-timestamp:
      in: header
      name: timestamp
      schema:
        type: string
        example: "2022-12-04T18:01:07+00:00"
      required: true
      description: Timestamp of request when it was sent , ideally it should be GMT
    x-hmac:
      in: header
      name: x-hmac
      schema:
        type: string
        example: "bd4a82cd319ababe57d0a822049ae8985029f82237509d3f091c82cbc7a6945c"
      required: true
      description: Signature created in combination of {payload}+{x-timestamp:}+{x-sender-id}.This is usually encrypted string using HMAC-SHA-256 algorithm with the private key.
    x-registry-type:
      in: header
      name: x-registry-type
      schema:
        type: string
        enum: ['x-crvs']
      required: true
      description: This param used to decide which service to be called to retrieve data
    x-sender-id:
      in: header
      name: x-sender-id
      schema:
        type: string
        example: "SP_CRVS_2022"
      required: true
      description: Information about requester , it may be some code of SP system
    x-message-id:
      in: header
      name: x-message-id
      schema:
        type: string
        format: uuid
        example: 0c96614c-7255-4774-b109-cd53ee859000
      required: true
      description: UUID string to be sent in request header for tracking of request
    x-async:
      in: header
      name: x-async
      schema:
        type: string
        example: true
      required: true
      description: Async param indicate that response to be sent immediate or in call back, if _true_ send data in response if _false_ just return HTTP status 202
    x-callbackendpoint:
      in: header
      name: x-callbackendpoint
      schema:
        type: string
        example: "https://senderhost/callback/on-disburse"
      required: false
      description: If async response requested then this param to be supplied for receiving data in SP system, this is usually endpoint active in SP env

  schemas:
    SearchRequest:
      allOf:
        - $ref: '#/components/schemas/FilterGroupCRVSRegistry'
      type: object
      properties:
        transaction_id:
          type: string
          example: 0c96614c-7255-4774-b109-cd53ee851769
#        filtergroups:
#          type: array
#          items:
#            oneOf:
#              - $ref: '#/components/schemas/FilterGroupCRVSRegistry'
        sortby:
          $ref: '#/components/schemas/Sort'
        pagination:
          type: object
          properties:
            page_size:
              type: number
              example: 10
            page_number:
              type: number
              example: 5  
    SearchCondition:
      description: Expression with a condition
      type: object
      properties:
        expression1:
          $ref: '#/components/schemas/SearchExpression'
        condition:
          $ref: '#/components/schemas/SearchExpCondition'
        expression2:
          $ref: '#/components/schemas/SearchExpression'
      required:
        - expression1
    SearchConditionList:
      items:
        $ref: '#/components/schemas/SearchCondition'
    SearchExpCondition:
      description: Condition in an expression
      type: string
      enum:
        - and
        - or
        - not
      example: and
    SearchExpOperator:
      description: Operator in an expression
      type: string
      enum:
        - gt
        - lt
        - eq
        - ge
        - le
      example: eq
    SearchExpression:
      description: Expression
      properties:
        seq_num:
          description: Expression sequence number for correlation
          type: number
          example: 1
        attribute_name:
          type: string
          description: attribute name
          enum: ['']
        operator:
          $ref: '#/components/schemas/SearchExpOperator'
        attribute_value:
          oneOf:
            - type: string
            - type: integer
            - type: number
            - type: boolean
    FilterGroupCRVSRegistry:
      type: object
      properties:
        query:
          type: array
          items:
            anyOf:
              - $ref: '#/components/schemas/NameField'
              - $ref: '#/components/schemas/ExpressionAnd'
              - $ref: '#/components/schemas/Repositories'
    ExpressionOr:
      type: object
      properties:
        expression:
          type: string
          enum: [or]
    ExpressionAnd:
      type: object
      properties:
        expression:
          type: string
          enum: [and]
    IdentifierTypeField:
      description: 'Search with identifier type'
      allOf: 
        - type: object
          required:
            - fieldname
            - value
          properties: 
            fieldname:
              type: string
              example: 'identifier.type'
              enum: ['identifier.type']
            value: 
              type: string
              example: "NATIONAL_ID"
              enum: ['NATIONAL_ID','CRVS_ID']
    IdentifierValueField:
      description: 'Search with identifier value'
      allOf: 
        - type: object
          required:
            - fieldname
            - value
          properties: 
            fieldname:
              type: string
              example: 'identifier.value'
              enum: ['identifier.value']
            operator:
              $ref: '#/components/schemas/FieldOperatorAnd'
            value: 
              type: string
              example: "345678912"
              description: 'Any string that contains identifier, for example for identifier.type NATIONAL_ID value may be 345678912'
    NameField:
      description: 'Search by name'        
      allOf: 
        - type: object
          required:
            - fieldname
            - value
          properties: 
            fieldname:
              type: string
              example: 'firstname'
              enum: ['firstname']
            operator:
              $ref: '#/components/schemas/FieldOperatorAnd'
            value: 
              type: string
              example: "john"
              description: 'Search by firstname'
    RegionField:
      description: 'Search by region'        
      allOf: 
        - type: object
          required:
            - fieldname
            - value
          properties: 
            fieldname:
              type: string
              example: 'region'
              enum: ['location']
            operator:
              $ref: '#/components/schemas/FieldOperatorAnd'
            value: 
              type: string
              example: "SE- India"
              enum: ['SE- India','WEST - INDIA']
              description: 'Search by location'
    Repositories:
      allOf: 
        - type: object
          required:
            - fieldname
            - value
          properties: 
            fieldname:
              type: string
              example: 'repository_type'
              enum: ['repository_type']
            operator:
              $ref: '#/components/schemas/FieldOperatorAnd'
            value: 
              type: string
              example: "Birth"
              enum: ['Birth', 'Death', 'Marriage']
              description: 'Search by repository_type type'
    FieldOperatorOr:
      type: string
      enum:
        - or
    FieldOperatorAnd:
      type: string
      enum:
        - and
    FieldOperatorcontains:
      type: string
      enum:
        - contains
    FieldOperatorLike:
      type: string
      enum:
        - like
    GroupOperator:
      type: string
      enum:
        - or
        - and
    Sort:
      type: object
      properties:
        fieldname:
          type: string
          enum: [firstname,dob]
        order:
          type: string
          enum: ["asc","desc"]
    ApiResponse:
      type: object
      properties:
        success:
          type: string
        return_message:
          type: string
        error_code:
          type: string
        transaction_id:
          type: string
          example: 0c96614c-7255-4774-b109-cd53ee859000
          description: The transaction_id received in request
        data: 
          type: array
          items:
            anyOf:
              - $ref: '#/components/schemas/CRVSSearchByMRNResponse'
              - $ref: '#/components/schemas/CRVSSearchByBRNResponse'
              - $ref: '#/components/schemas/CRVSSearchByDRNResponse'
    HumanName:
      type: object
      properties:
        suffix:
          type: string
          example: PhD
        prefix:
          type: string
          example: Mr.
        first_name:
          type: string
          example: john
        middle_name:
          type: string
          example: doe
        last_name:
          type: string
          example: doe
    CRVSSearchByMRNResponse:
      type: object
      properties:
        groom_identifier:
          type: array
          items:
            allOf:
              - $ref: '#/components/schemas/Identifier'
              - $ref: '#/components/schemas/Identifier'
        groom_name:
          $ref: '#/components/schemas/HumanName'
        groom_father_name:
          $ref: '#/components/schemas/HumanName'
        groom_mother_name:
          $ref: '#/components/schemas/HumanName'
        groom_nationality:
          type: string
          example: 'Dominican'
        groom_date_of_birth:
          type: string
          example: '12/05/1983'        
        groom_marital_status:
          type: string
          enum: [unmarried,divorced,widowed]
        bride_identifier:
          type: array
          items:
            allOf:
              - $ref: '#/components/schemas/Identifier'
              - $ref: '#/components/schemas/Identifier'
        bride_name:
          $ref: '#/components/schemas/HumanName'
        bride_father_name:
          $ref: '#/components/schemas/HumanName'
        bride_mother_name:
          $ref: '#/components/schemas/HumanName'
        bride_nationality:
          type: string
          example: 'Dominican'
        bride_date_of_birth:
          type: 'string'
          example: '12/05/1983'
        bride_marital_status:
          type: string
          enum: [unmarried,divorced,widowed]
        contactno:
          type: string
          example: '+1-7894561312'
        date_of_marriage:
          type: string
          example: '12/05/2022'          
        place_of_marriage:
          type: string
          example: 'Angel Iceland'
        marriage_registration_number:
          type: string
          example: 'MRN_DC-20221205A12'
    CRVSSearchByBRNResponse:
      type: object
      properties:
        identifier:
          type: array
          items:
            allOf:
              - $ref: '#/components/schemas/Identifier'
              - $ref: '#/components/schemas/Identifier'
        name:
          $ref: '#/components/schemas/HumanName'
        father_name:
          $ref: '#/components/schemas/HumanName'
        mother_name:
          $ref: '#/components/schemas/HumanName'
        contactno:
          type: string
        date_of_birth:
          type: string
          example: '11/17/1980'
        date_of_death:
          type: string
          example: '01/03/2023'
        gender:
          type: string
          example: 'male'          
        birth_registration_number:
          type: string
          example: 'BRN_XP-19801109A11'
        death_registration_number:
          type: string            
          example: 'DRN_XP-20230309A11'
    CRVSSearchByDRNResponse:
      type: object
      properties:
        identifier:
          type: array
          items:
            allOf:
              - $ref: '#/components/schemas/Identifier'
              - $ref: '#/components/schemas/Identifier'
        name:
          $ref: '#/components/schemas/HumanName'
        father_name:
          $ref: '#/components/schemas/HumanName'
        mother_name:
          $ref: '#/components/schemas/HumanName'
        contactno:
          type: string
          example: '+1-7894561312'
        date_of_birth:
          type: string
          example: '11/17/1980'
        date_of_death:
          type: string
          example: '01/03/2023'
        gender:
          type: string
          example: 'male'
        birth_registration_number:
          type: string
          example: 'BRN_XP-19801109A11'
        death_registration_number:
          type: string
          example: 'MRN_DC-20221205A12'          
    Identifier:
      type: object
      properties:
        type:
          type: string
          enum: ['NATIONAL_ID','BIRTH_REG_NO']
        value:
          type: string
          example: 345678912
    HttpErrorResponse:
      description: HTTP layer error details
      properties:
        error_code:
          type: string
        error_message:
          type: string
    SupportedEvents:
      type: object
      properties:
        eventlist:
          type: array
          items:
            allOf:
              - $ref: '#/components/schemas/BirthRegistrationEvent'
    BirthRegistrationEvent:
      type: object
      properties:
        event_code:
          type: string
          enum: ['BIRTH_REGISTRATION']
          description: 'To subscribe this event send this code in subscription request'
        response_format:
          type: string
          enum: ['json']
        response_sample:
          type: array
          items:
            allOf:
              - $ref: '#/components/schemas/CRVSSearchByBRNResponse'
    SubscriptionRequest:
      type: object
      properties:
        event_code:
          type: string
          enum: ['BIRTH_REGISTRATION']
          description: 'To subscribe this event send this code in subscription request'
        client_id:
          type: string
        callback_url:
          type: string
    SubscriptionResponse:
      type: object
      properties:
        success:
          type: string
        return_message:
          type: string
        error_code:
          type: string
        subscribed_events:
          type: string
          example: 0c96614c-7255-4774-b109-cd53ee859000
          description: The transaction_id received in request
        data: 
          type: array
          items:
            $ref: '#/components/schemas/SubscriptionRequest'
    UnSubscribeRequest:
      type: object
      properties:
        event_code:
          type: string
          enum: ['BIRTH_REGISTRATION']
          description: 'To subscribe this event send this code in subscription request'
        client_id:
          type: string
        reason:
          type: string  
    IsAliveEligibility:
      type: object
      properties:
        eligibility_check_id:
          type: string
          format: string
        eligibility_check_type:
          type: string
          description: claim type 
          example: IS_ALIVE
          enum: ['IS_ALIVE']
        response_format:
          type: string
          enum: ['json']  
    EligibilityDeterminationRequest:
      type: object
      description: '' 
      properties:
        eligibility_codes:
          type: array
          items:
            type: string
          example: ["IS_ALIVE", "IS_MARRIED", "IS_SENIOR_CITIZEN"]
          description: 'Is given id valid in farmer registry, This will check in farmer registry for supplied information of ID'
        national_id:
          type: string
          example: 345678912
#    EligibilityDeterminationRequest:
#      type: object
#      properties:
#        
#        payload:
#          type: array
#          items:
#            anyOf:
#              - $ref: '#/components/schemas/VerifiableCredentialIsAlive'
    VerifiableCredentialIsAlive:
      type: object
      properties:
        context:
          type: array
          example: ['https://www.w3.org/2018/credentials/v1','https://w3id.org/citizenship/v1','https://example.com/crvs/v1']
          items:
            type: string
            enum: ['https://www.w3.org/2018/credentials/v1','https://w3id.org/citizenship/v1','https://example.com/crvs/v1']
        type:
          type: array
          example: ['VerifiableCredential','IsAliveCredential']
          items:
            type: string
            items:
              type: string
            example: ["VerifiableCredential", "IsAliveCredential"]                 
        determine:
          $ref : '#/components/schemas/IsAliveEligibility'
        issuer: 
          type: string
          example: 'did:crvs-registry:345678912'
        issuanceDate:
          type: string
        expirationDate:
          type: string
        credentialSubject:
          $ref: '#/components/schemas/CredentialSubject'
        proof:
          $ref: '#/components/schemas/Proof'
    EligibilityDeterminationResponse:
      type: object
      properties:
        verifiableCredential:
          type: array
          items:
            anyOf:
              - $ref : '#/components/schemas/VerifiableCredentialIsAliveResponse'
    CredentialSubject:
      type: object
      properties:
        identifier:
          $ref: '#/components/schemas/Identifier'
        id:
          type: string
        person:
          $ref: '#/components/schemas/HumanName'
        address:
          $ref: '#/components/schemas/Address'
        contact:
          $ref: '#/components/schemas/Contact' 
    Address:
      type: object
      properties:
        city:
          type: string
        state:
          type: string
        country:
          type: string
    Contact:
      type: object
      properties:
        email:
          type: string
        phone:
          type: string
    Proof:
      type: object
      properties:
        type:
          type: string
          example: 'Ed25519Signature2018'        
        created:
          type: string
          example: '2023-05-09T12:34:56Z'      
        verificationMethod:
          type: string
          example: 'did:example:123#key-1'        
        proofPurpose:
          type: string
          example: 'assertionMethod'       
        jws:
          type: string
          example: 'eyJhbGciOiJFZDI1NTE5U2lnbmF0dXJlMjAxOCIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iHCBYnF2ovIe9hjaaxEC25N-2P8w4Qtf9zQBUV-zXnLHfYqzzubpI8f0mvmXdD6rvYB-9Zx_bFdK46e1IcblDA' 
    VerifiableCredentialIsAliveResponse:
      type: object
      properties:
        id:
          type: string
          example: 'https://registry-host/isalive/NATIONAL_ID/345678912'
        issuer:
          type: string
          example: 'https://registry-host.com'
        issuanceDate:
          type: string
          example: '2022-05-09T10:11:12Z'          
        credentialSubject:
            $ref : '#/components/schemas/CredentialSubject'
        is_alive:
          type: boolean
          example: true
  securitySchemes:
    spmis_auth:            # arbitrary name for the security scheme
      type: http
      scheme: bearer
      bearerFormat: JWT