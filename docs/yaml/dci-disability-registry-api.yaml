openapi: 3.0.3
info:
  title: Disability registry APIs
  description: ' '
  version: 0.0.1
servers:
  - description: Disability registry access point
    url: https://localhost:8081/
tags:

  - name: Query Disability Registry API
    description: ''

paths:

  /getDisablePersonList:
    post:
      tags:
        - Query Disability Registry API
      summary: 'API to retrieve list of disabled person based on disability_type(optional) /location(optional) / disability_percentage(optional) / registration_year(optional) '
      description: ''
      parameters:
        - $ref: "#/components/parameters/version"
        - $ref: "#/components/parameters/x-hmac"
        - $ref: "#/components/parameters/authorization"
        - $ref: '#/components/parameters/x-registry-type'
        - $ref: '#/components/parameters/x-message-id'
        - $ref: '#/components/parameters/x-timestamp'
        - $ref: '#/components/parameters/x-sender-id'
        - $ref: '#/components/parameters/x-async'
        - $ref: '#/components/parameters/x-callbackendpoint'
      requestBody:
        description: Request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetDisablePersonListRequest'     
        required: true
      responses:
        '102':
          description: Processing 
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDisablePersonListResponse'          
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorResponse' 
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorResponse' 
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorResponse' 
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorResponse' 
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorResponse'
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorResponse' 
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorResponse' 
      security:
        - spmis_auth:
            - read:search
  /isDisable:
    post:
      tags:
        - Query Disability Registry API
      summary: 'API to chek if person is disable or not'
      description: ''
      parameters:
        - $ref: "#/components/parameters/version"
        - $ref: "#/components/parameters/x-hmac"
        - $ref: "#/components/parameters/authorization"
        - $ref: '#/components/parameters/x-registry-type'
        - $ref: '#/components/parameters/x-message-id'
        - $ref: '#/components/parameters/x-timestamp'
        - $ref: '#/components/parameters/x-sender-id'
        - $ref: '#/components/parameters/x-async'
        - $ref: '#/components/parameters/x-callbackendpoint'
      requestBody:
        description: Request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckIsDisableRequest'     
        required: true
      responses:
        '102':
          description: Processing 
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckIsDisableResponse'          
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorResponse' 
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorResponse' 
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorResponse' 
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorResponse' 
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorResponse'
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorResponse' 
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorResponse' 
      security:
        - spmis_auth:
            - read:search

  /getDisabilityInfo:
    post:
      tags:
        - Query Disability Registry API
      summary: 'API to retrieve all disability of person'
      description: ''
      parameters:
        - $ref: "#/components/parameters/version"
        - $ref: "#/components/parameters/x-hmac"
        - $ref: "#/components/parameters/authorization"
        - $ref: '#/components/parameters/x-registry-type'
        - $ref: '#/components/parameters/x-message-id'
        - $ref: '#/components/parameters/x-timestamp'
        - $ref: '#/components/parameters/x-sender-id'
        - $ref: '#/components/parameters/x-async'
        - $ref: '#/components/parameters/x-callbackendpoint'
      requestBody:
        description: Request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DisabilityInfoRequest'     
        required: true
      responses:
        '102':
          description: Processing 
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisablePersonInfoResponse'          
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorResponse' 
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorResponse' 
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorResponse' 
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorResponse' 
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorResponse'
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorResponse' 
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorResponse' 
      security:
        - spmis_auth:
            - read:search
  /getCorrespondentInfo:
    post:
      tags:
        - Query Disability Registry API
      summary: 'API to retrieve correspondent details of disable of person'
      description: ''
      parameters:
        - $ref: "#/components/parameters/version"
        - $ref: "#/components/parameters/x-hmac"
        - $ref: "#/components/parameters/authorization"
        - $ref: '#/components/parameters/x-registry-type'
        - $ref: '#/components/parameters/x-message-id'
        - $ref: '#/components/parameters/x-timestamp'
        - $ref: '#/components/parameters/x-sender-id'
        - $ref: '#/components/parameters/x-async'
        - $ref: '#/components/parameters/x-callbackendpoint'
      requestBody:
        description: Request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CorrespondentInfoRequest'     
        required: true
      responses:
        '102':
          description: Processing 
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CorrespondentInfoResponse'          
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorResponse' 
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorResponse' 
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorResponse' 
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorResponse' 
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorResponse'
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorResponse' 
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorResponse' 
      security:
        - spmis_auth:
            - read:search

components:
  parameters:
    authorization:
      name: Authorization
      in: header
      required: true
      description: Access token which was issued after successful login with gateway auth server.
      schema:
        type: string
        example: Bearer <...>        
    version:
      in: header
      name: x-api-version
      schema:
        type: string
        example: "1.0.0"
      required: false
      description: If not provided use latest api version as default
    x-timestamp:
      in: header
      name: timestamp
      schema:
        type: string
        example: "2022-12-04T18:01:07+00:00"
      required: true
      description: Timestamp of request when it was sent , ideally it should be GMT
    x-hmac:
      in: header
      name: x-hmac
      schema:
        type: string
        example: "bd4a82cd319ababe57d0a822049ae8985029f82237509d3f091c82cbc7a6945c"
      required: true
      description: Signature created in combination of {payload}+{x-timestamp:}+{x-sender-id}.This is usually encrypted string using HMAC-SHA-256 algorithm with the private key.
    x-registry-type:
      in: header
      name: x-registry-type
      schema:
        type: string
        enum: ['x-disability']
      required: true
      description: This param used to decide which service to be called to retrieve data
    x-sender-id:
      in: header
      name: x-sender-id
      schema:
        type: string
        example: "NOBLE_SP_PROGRAMME"
      required: true
      description: Information about requester , it may be some code of SP system
    x-message-id:
      in: header
      name: x-message-id
      schema:
        type: string
        format: uuid
        example: 0c96614c-7255-4774-b109-cd53ee859000
      required: true
      description: UUID string to be sent in request header for tracking of request
    x-async:
      in: header
      name: x-async
      schema:
        type: string
        example: true
      required: true
      description: Async param indicate that response to be sent immediate or in call back, if _true_ send data in response if _false_ just return HTTP status 202
    x-callbackendpoint:
      in: header
      name: x-callbackendpoint
      schema:
        type: string
        example: "https://senderhost/callback/on-disburse"
      required: false
      description: If async response requested then this param to be supplied for receiving data in SP system, this is usually endpoint active in SP env
  schemas:
    GetDisablePersonListRequest:
      type: object
      properties:
        disability_type:
          type: string
          example: 'Vision'
        location:
          type: string
          example: 'South-East'
        disability_percentage:
          type: string
          example: '50'
        registration_year:
          type: string
          example: '2023'
    GetDisablePersonListResponse:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/DisablePersonBaseInfo' 
    CheckIsDisableRequest:
      type: object
      properties:
        identifier_list:
          type: array
          items:
            allOf:
              - $ref: '#/components/schemas/Identifier'
    CheckIsDisableResponse:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
      properties:
        disable_persion_info:
          $ref: '#/components/schemas/CheckIsDisableObject'
    CheckIsDisableObject:
      type: object
      properties:
        identifier:
          $ref: '#/components/schemas/Identifier'
        is_disable:
          type: string
          enum: ['yes','no']
          example: 'yes'
    DisabilityInfoRequest:
      type: object
      properties:
        identifier_list:
          type: array
          items:
            allOf:
              - $ref: '#/components/schemas/Identifier'
    DisablePersonInfoResponse:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
      properties:
        data:
          type: array
          items:
            anyOf:
              - $ref: '#/components/schemas/DisablePersonWithDisability'

    DisablePersonBaseInfo:
      properties:
        identifier:
          type: array
          example: '[{"type": "NATIONAL_ID","value": "345678912"},{"type": "DISABILITY_REG_NO","value": "DR20230502002"}]'
          items:
            anyOf:
              - $ref: '#/components/schemas/Identifier'      
        name:
          $ref: '#/components/schemas/HumanName'
        contactno:
          type: string
        date_of_birth:
          type: string
          example: '11/17/1980'
        gender:
          type: string
          example: 'male'       
          enum: ['male','female','transgender'] 
        certificate_issue_date:
          type: string
          example: '11/17/1985'
    DisablePersonWithDisability:
      allOf:
        - $ref: '#/components/schemas/DisablePersonBaseInfo'
      properties:
        disability_list:
          type: array
          items:
            anyOf:
              - $ref: '#/components/schemas/DisabilityInfo'      
    DisabilityInfo:
      type: object
      properties:
        registration_id:
          type: string
          example: 'DR20230502002-001'
        disability_since:
          type: string
          example: '01-Jun-2015'
        disability_type:
          type: string
          example: 'Vision | Blindness both eyes'
        disability_percentage:
          type: string
          example: '100'
        by_birth:
          type: string
          example: 'Yes'
        disability_dueto:
          type: string
          example: 'Diseases'

    CorrespondentInfoRequest:
      type: object
      properties:
        identifier_list:
          type: array
          items:
            allOf:
              - $ref: '#/components/schemas/Identifier'
    CorrespondentInfoResponse:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
      properties:
        data:
          type: array
          items:
            anyOf:
              - $ref: '#/components/schemas/CorrespondentInfoObject'
    CorrespondentInfoObject:
      type: object
      properties:
        identifier:
          $ref: '#/components/schemas/Identifier' 
        name:
          $ref: '#/components/schemas/HumanName'        
        relation:
          type: string
          enum: ['father','mother','husband','wife','daughter','son']
        contactno:
          type: string
          example: '+91 999999999'
    BaseResponse:
      type: object
      properties:
        success:
          type: string
        return_message:
          type: string
        error_code:
          type: string
        transaction_id:
          type: string
          example: 0c96614c-7255-4774-b109-cd53ee859000
          description: The transaction_id received in request
    HumanName:
      type: object
      properties:
        suffix:
          type: string
          example: PhD
        prefix:
          type: string
          example: Mr.
        first_name:
          type: string
          example: john
        middle_name:
          type: string
          example: doe
        last_name:
          type: string
          example: doe
    Identifier:
      type: object
      properties:
        type:
          type: string
          enum: ['NATIONAL_ID','DISABILITY_REG_NO']
        value:
          type: string
          example: 345678912
    IdentifierWithTransactionId:
      type: object
      properties:
        identifier:
           $ref: '#/components/schemas/Identifier'
        transaction_id:
          type: string
          example: '0c96614c-7255-4774-b109-cd53ee859000'
    HttpErrorResponse:
      description: HTTP layer error details
      properties:
        error_code:
          type: string
        error_message:
          type: string

  securitySchemes:
    spmis_auth:            # arbitrary name for the security scheme
      type: http
      scheme: bearer
      bearerFormat: JWT