components:
  parameters:
    authorization:
      name: Authorization
      in: header
      required: true
      description: Access token which was issued after successful login with gateway auth server.
      schema:
        type: string
        example: Bearer <...>        
  schemas:
    CommonHeaders:
      type: object
      description: Message header
      properties:
        version:
          description: Messaging protocol specification version being used
          type: string
          example: 1.0.0
        message_id:
          description: 'Unique message id to communicate between sender and receiver systems to deliver the message over any transport layer i.e https, pub/sub, sftp etc.,'
          type: string
          example: '123456789020211216223812'
        message_ts:
          description: Time of message generation in RFC3339 format
          type: string
          format: date-time
          example: '2022-12-04T18:01:07+00:00'
        sender_id:
          description: 'The ID of sender system registered with the receiving system. Used for authorization, encryption, digital sign verification, etc., functions.'
          type: string
          example: '10089'
        receiver_id:
          description: 'The targeted system to which request to send'
          type: string
          example: 'crvs'
        action:
          description: 'Action to be performed'
          type: string
          example: 'search'
        total_count:
          description: Total count of requests present in the message
          type: integer
          example: 10
        is_encrypted:
          description: If is_encrypted true then receiving system will expect message part of request in encrypted format also receiving system will expect  encryption_algorithm param.  
          type: boolean
          example: true 
          default: false   
        encryption_algorithm:
          description: Encryption algorithm used to encrypt message part of request
          type: string
          example: "DH-2048"                
      required:
        - version
        - message_id
        - message_ts
        - action
        - sender_id
        - receiver_id
        - total_count
        - is_encrypted 
    AsyncHeaders:
      type: object
      description: Message header
      properties:
        async:
          description: If true then async request else sender will expect response in same request , default is true.
          type: boolean 
          example: true
          default: true
    SearchCallbackHeader:
      type: object
      properties:
        callbackendpoint:
          description: The callback url for async call, if async param is true then we callbackendpoint is required.
          type: string
          format: uri
          example: 'https://{server_url}/on-search'
    NotifyCallbackHeader:
      type: object
      properties:
        callbackendpoint:
          description: The callback url for async call, if async param is true then we callbackendpoint is required.
          type: string
          format: uri
          example: 'https://{server_url}/notify'
    SubscribeMsgHeader:
      type: object
      description: Message header
      properties:
        callbackendpoint:
          description: The callback url for async call
          type: string
          format: uri
          example: 'https://{server_url}/notify'
      required:
        - version
        - message_id
        - message_ts
        - action
        - sender_id
        - receiver_id
        - total_count
        - is_encrypted
        - encryption_algorithm           