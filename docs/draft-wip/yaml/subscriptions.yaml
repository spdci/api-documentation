components:
  schemas:
    SubscriptionRequest:
      type: object
      properties:
        signature: 
          $ref: './signature.yaml#/components/schemas/MsgSignature'
        headers:
          allOf:
            - $ref: './headers.yaml#/components/schemas/CommonHeaders'
            - $ref: './headers.yaml#/components/schemas/NotifyCallbackHeader'
          properties:
            action:
              enum:
                - subscribe
              example: 'subscribe'      
        message:
          type: object
          anyOf:
            - $ref: '#/components/schemas/SubscriptionMessage'
            - $ref: './common.yaml#/components/schemas/EncryptedRequest'          
      required:
        - headers
        - message
    SubscriptionMessage: 
      type: object
      properties:
        transaction_id:
          $ref: './common.yaml#/components/schemas/TransactionId'
        subscribe_request:
          $ref: '#/components/schemas/SubscribeRequest'
      required:
        - transaction_id
        - subscribe_request
    SubscribeRequest:
      type: object
      description: Subscribe to a life event with crvs
      properties:
        reference_id:
          $ref: "./common.yaml#/components/schemas/ReferenceId"
        timestamp:
          $ref: "./common.yaml#/components/schemas/TimeStamp"
        registry_type:
          $ref: "./common.yaml#/components/schemas/RegistryType"
        event_type:
          anyOf:
          - $ref: "./dci-crvs.v.1.0.0.yaml#/components/schemas/SearchRequestObject/properties/event_type/anyOf/0"
          - $ref: "./common.yaml#/components/schemas/CREventType"
        frequency:
          type: string
          example: ''
          enum: ['immediate','hourly','daily','weekly']        
        subscribe_criteria:
          type: object
          properties:
            query:
              oneOf:
              - $ref: "./common.yaml#/components/schemas/Identifiers"
              - $ref: "#/components/schemas/RegistryRecord"
              - $ref: "#/components/schemas/CRRecordBirth"
              - $ref: "#/components/schemas/CRRecordDeath"
              - $ref: "#/components/schemas/CRRecordUnion"
            custom_query:
              "$ref": "./common.yaml#/components/schemas/ExpressionWithConditionList"
        filter:
          description: Record attribute(s) to send in response thorugh callback notification
            events
          items:
            type: string
        locale:
          $ref: "./common.yaml#/components/schemas/Locale"
      required:
      - reference_id
      - timestamp
      - registry_type
      - subscribe_criteria
      - filter                
    EventInfo:
      type: object
      properties:
        code:
          type: string
          example: ''
          enum: ["BIRTH_REGISTRATION", "DEATH_REGISTRATION","MARRIAGE_REGISTRATION","DIVORCE_REGISTRATION","DEMOGRAPHIC_UPDATE"]
        frequency:
          type: string
          example: ''
          enum: ['immediate','hourly','daily','weekly']
        response_fields:
          type: array
          example: '[]'
          items:
            type: string 
            enum: []
            example: '[]'

    SubscriptionResponse:
      allOf:
        - $ref: './responses.yaml#/components/schemas/BaseResponse'
      type: object
      properties:
        message: 
          type: array
          items:
            type: object
            anyOf:
              - $ref: '#/components/schemas/SubscriptionList'
    SubscriptionList:
      type: object
      properties:
        subscription:
          type: array
          items:
            $ref: '#/components/schemas/SubscriptionObject'
    SubscriptionObject:
      type: object
      properties:
        event_code:
          type: string
          example: ''
          enum: ["BIRTH_REGISTRATION", "DEATH_REGISTRATION","MARRIAGE_REGISTRATION","DIVORCE_REGISTRATION","DEMOGRAPHIC_UPDATE"]
        registration_id:
          type: string
          example: ''
        status:
          type: string
          example: ''
    UnSubscribeRequest:
      type: object
      properties:
        signature:
          allOf:
            - $ref: './signature.yaml#/components/schemas/MsgSignature'      
        headers:
          allOf:
            - $ref: './headers.yaml#/components/schemas/CommonHeaders'      
        message:
          type: object
          anyOf:
            - $ref: '#/components/schemas/UnSubscribeMessage'
            - $ref: './common.yaml#/components/schemas/EncryptedRequest'      
      required:
        - headers
        - message

    UnSubscribeMessage:
      type: object
      properties:
        transaction_id:
          $ref: "./common.yaml#/components/schemas/ReferenceId"
        timestamp:
          $ref: "./common.yaml#/components/schemas/TimeStamp"
#        event_code:
#          type: array
#          items:
#            type: string
#          example: ["BIRTH_REGISTRATION", "DEATH_REGISTRATION","MARRIAGE_REGISTRATION","DIVORCE_REGISTRATION","DEMOGRAPHIC_UPDATE"]
#          description: 'To un-subscribe this event send this code in subscription request'
        client_id:
          type: string
          example: ''
        registry_type:
          $ref: "./common.yaml#/components/schemas/RegistryType"
        event_type:
          anyOf:
          - $ref: "./dci-crvs.v.1.0.0.yaml#/components/schemas/SearchRequestObject/properties/event_type/anyOf/0"
          - $ref: "./common.yaml#/components/schemas/CREventType"
        reason:
          type: string  
          example: ''
      required:
        - transaction_id
        - timestamp
        - client_id
        - registry_type
        - event_type
        - reason        
    UnSubscribeResponse:
      allOf:
        - $ref: './responses.yaml#/components/schemas/BaseResponse'
      type: object
      properties:
        message: 
          type: array
          items:
            $ref: '#/components/schemas/UnSubscribeObjectList'
    UnSubscribeObjectList:
      type: object
      properties:
        event:
          type: array
          items:
            $ref: '#/components/schemas/SubscriptionObject'            
    RegistryRecord:
      description: |
        1. Attributes of a person to create fetch records, create verifiable credentials or use in search criteria.
        3. Allowes Country/Registry specific implementation extensions using Attribute Name/Value pairs.
      properties:
        identifier:
          $ref: './common.yaml#/components/schemas/Identifiers'              
        issue_date:
          type: string
          format: date-time
        status:
          description: Registry status
          type: string
        name:
          description: End-User's full name in displayable form including all name
            parts, possibly including titles and suffixes, ordered according to the
            End-User's locale and preferences.
          type: string
        given_name:
          description: Given name(s) or first name(s) of the End-User. Note that in
            some cultures, people can have multiple given names; all can be present,
            with the names being separated by space characters.
          type: string
        family_name:
          description: Surname(s) or last name(s) of the End-User. Note that in some
            cultures, people can have multiple family names or no family name; all
            can be present, with the names being separated by space characters.
          type: string
        middle_name:
          description: Middle name(s) of the End-User. Note that in some cultures,
            people can have multiple middle names; all can be present, with the names
            being separated by space characters. Also note that in some cultures,
            middle names are not used.
          type: string
        email:
          description: End-User's preferred e-mail address. Its value MUST conform
            to the RFC 5322 [RFC5322] addr-spec syntax. The RP MUST NOT rely upon
            this value being unique, as discussed in Section 5.7.
          type: string
        email_verified:
          description: address was controlled by the End-User at the time the verification
            was performed. The means by which an e-mail address is verified is context-specific,
            and dependent upon the trust framework or contractual agreements within
            which the parties are operating.
          type: boolean
        gender:
          description: End-User's gender. Values defined by this specification are
            female and male. Other values MAY be used when neither of the defined
            values are applicable.
          type: string
        birthdate:
          description: YYYY format is allowed. Note that depending on the underlying
            platform's date related function, providing just year can result in varying
            month and day, so the implementers need to take this factor into account
            to correctly process the dates.
          type: string
        place_of_birth:
          description: End-User's place of birth. The value of this member is a JSON
            structure containing some or all of the following members
          type: object
        phone_number:
          description: number contains an extension, it is RECOMMENDED that the extension
            be represented using the RFC 3966 [RFC3966] extension syntax, for example,
            +1 (604) 555-1234;ext=5678.
          type: string
        phone_number_verified:
          description: True if the End-User's phone number has been verified; otherwise
            false. When this Claim Value is true, this means that the OP took affirmative
            steps to ensure that this phone number was controlled by the End-User
            at the time the verification was performed. The means by which a phone
            number is verified is context-specific, and dependent upon the trust framework
            or contractual agreements within which the parties are operating. When
            true, the phone_number Claim MUST be in E.164 format and any extensions
            MUST be represented in RFC 3966 format.
          type: string
        address:
          "$ref": "./common.yaml#/components/schemas/PersonAddress"
        nationalities:
          description: End-User's nationalities using ICAO 3-letter codes [ICAO-Doc9303],
            e.g., "USA" or "JPN". 2-letter ICAO codes MAY be used in some circumstances
            for compatibility reasons.
          type: array
          items:
            type: string
        updated_at:
          description: Time the End-User's information was last updated. Its value
            is a JSON number representing the number of seconds from 1970-01-01T0:0:0Z
            as measured in UTC until the date/time
          type: number
        additional_attributes:
          "$ref": "./common.yaml#/components/schemas/AttributeNameValue"
    CRRecordBirth:
      description: |
        1. Civil registry birth and adoption type record
        2. Allows Country/Registry specific implementation extensions using key/value pairs.
      allOf:
      - properties:
          registration_type:
            type: string
            enum:
            - birth
            - adoption
          registration_number:
            description: Registration number
            type: string
          registration_date:
            description: Registration date
          link_registration_number:
            description: Registration number to related record. e.g birth registration
              no for death, marriage registration no for divorce/annulment, etc.,
            type: string
          related_persons:
            items:
              allOf:
              - $ref: "./common.yaml#/components/schemas/CRRelatedPerson"
              - properties:
                  relationship:
                    enum:
                    - mother
                    - father
                    - other
      - "$ref": "./common.yaml#/components/schemas/CRRecord"
    CRRecordDeath:
      description: |
        1. Civil registry death record
        2. Allows Country/Registry specific implementation extensions using key/value pairs.
      allOf:
      - properties:
          egistration_type:
            type: string
            enum:
            - death
          registration_number:
            description: Registration number
            type: string
          registration_date:
            description: Registration date
          link_registration_number:
            description: Registration number to related record. e.g birth registration
              no for death, marriage registration no for divorce/annulment, etc.,
            type: string
          deathdate:
            description: YYYY format is allowed. Note that depending on the underlying
              platform's date related function, providing just year can result in
              varying month and day, so the implementers need to take this factor
              into account to correctly process the dates.
            type: string
          place_of_death:
            description: End-User's place of birth. The value of this member is a
              JSON structure containing some or all of the following members
            type: object
      - "$ref": "./common.yaml#/components/schemas/CRRecord"          
    CRRecordUnion:
      description: |
        1. Civil registry marriage, divorce, seperation, annulment type records
        2. Allows Country/Registry specific implementation extensions using key/value pairs.
      allOf:
      - properties:
          registration_type:
            type: string
            enum:
            - marriage
            - divorce
            - seperation
            - annulment
          registration_number:
            description: Registration number
            type: string
          registration_date:
            description: Registration date
          link_registration_number:
            description: Registration number to related record. e.g birth registration
              no for death, marriage registration no for divorce/annulment, etc.,
            type: string
          related_person:
            allOf:
            - $ref: "./common.yaml#/components/schemas/CRRelatedPerson"
            - properties:
                relationship:
                  enum:
                  - wife
                  - husband
      - "$ref": "./common.yaml#/components/schemas/CRRecord"      
    NotifyEventRequest:
      type: object
      description: Registry to notify a event to subscrbiers
      properties:
        reference_id:
          "$ref": "./common.yaml#/components/schemas/ReferenceId"
        timestamp:
          "$ref": "./common.yaml#/components/schemas/TimeStamp"
        registry_type:
          "$ref": "./common.yaml#/components/schemas/RegistryType"
        event_type:
          anyOf:
          - "$ref": "./common.yaml#/components/schemas/CREventType"
        registry_data:
          oneOf:
          - "$ref": "./common.yaml#/components/schemas/HumanName"
          - "$ref": "./common.yaml#/components/schemas/CRRecordBirth"
          - "$ref": "./common.yaml#/components/schemas/CRRecordDeath"
          - "$ref": "./common.yaml#/components/schemas/CRRecordUnion"
          - "$ref": "./common.yaml#/components/schemas/RegistryRecord"
        locale:
          $ref: "./common.yaml#/components/schemas/Locale"
      required:
      - reference_id
      - timestamp
      - registry_type
      - registry_data
