openapi: 3.0.3
info:
  title: Authentication and Autherization API Documentation
  description: ""
  version: 0.0.1

servers:
  # Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/ahi-dev-dc/APIDoc/0.0.1
  - description: Gateway endpoint
    url: https://localhost:8081/
tags:
  - name: Authorization API
    description: 'Authorization API' 
paths:
  /auth:
    post:
      tags:
        - Authorization API
      summary: 'Generate token using client id and secret'
      description: '' 
      parameters:
        - $ref: "#/components/parameters/version"
        - $ref: "#/components/parameters/x-hmac"
        - $ref: '#/components/parameters/x-message-id'
        - $ref: '#/components/parameters/x-timestamp'
        - $ref: '#/components/parameters/x-sender-id'
      requestBody:
        description: 'Auth request'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthRequest'     
        required: true
      responses:
        '102':
          description: Processing 
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'          
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorResponse' 
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorResponse' 
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorResponse' 
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorResponse' 
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorResponse'
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorResponse' 
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorResponse' 
      security:
        - spmis_auth:
            - read:search
  /login/withcredentials:
    post:
      tags:
        - Authorization API
      summary: 'Generage token for user with his credentials and spmis client id and secret'
      description: '' 
      parameters:
        - $ref: "#/components/parameters/version"
        - $ref: "#/components/parameters/x-hmac"
        - $ref: '#/components/parameters/x-message-id'
        - $ref: '#/components/parameters/x-timestamp'
        - $ref: '#/components/parameters/x-sender-id'
      requestBody:
        description: Search request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'     
        required: true
      responses:
        '102':
          description: Processing 
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'          
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorResponse' 
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorResponse' 
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorResponse' 
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorResponse' 
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorResponse'
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorResponse' 
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorResponse' 
      security:
        - spmis_auth:
            - read:search
  /login/generateotp:
    post:
      tags:
        - Authorization API
      summary: 'Generate OTP using national id'
      description: Generate OTP using national id or refistered mobile no or alternate no registred with registry or ID system
      parameters:
        - $ref: "#/components/parameters/version"
        - $ref: "#/components/parameters/x-hmac"
        - $ref: "#/components/parameters/authorization"
        - $ref: '#/components/parameters/x-registry-type'
        - $ref: '#/components/parameters/x-message-id'
        - $ref: '#/components/parameters/x-timestamp'
        - $ref: '#/components/parameters/x-sender-id'
        - $ref: '#/components/parameters/x-token'        
      requestBody:
        description: Request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendOTPRequest'     
        required: true
      responses:
        '102':
          description: Processing 
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerateOTPResponse'          
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorResponse' 
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorResponse' 
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorResponse' 
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorResponse' 
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorResponse'
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorResponse' 
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorResponse' 
 
      security:
        - spmis_auth:
            - read:search
  /login/validateOTP:
    post:
      tags:
        - Authorization API
      summary: Validate OTP which was generated with national id
      description: '' 
      parameters:
        - $ref: "#/components/parameters/version"
        - $ref: "#/components/parameters/x-hmac"
        - $ref: "#/components/parameters/authorization"
        - $ref: '#/components/parameters/x-registry-type'
        - $ref: '#/components/parameters/x-message-id'
        - $ref: '#/components/parameters/x-timestamp'
        - $ref: '#/components/parameters/x-sender-id'
        - $ref: '#/components/parameters/x-token'
      requestBody:
        description: 'Validate OTP request'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ValidateOTPRequest'     
        required: true
      responses:
        '102':
          description: Processing 
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'          
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorResponse' 
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorResponse' 
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorResponse' 
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorResponse' 
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorResponse'
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorResponse' 
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorResponse' 
components:
  parameters:
    authorization:
      name: Authorization
      in: header
      required: true
      description: Access token which was issued after successful login with gateway auth server.
      schema:
        type: string
        example: Bearer <...>        
    x-token:
      name: x-token
      in: header
      required: true
      description: 'System token'
      schema:
        type: string
        example: Bearer <...>     
    version:
      in: header
      name: x-api-version
      schema:
        type: string
        example: "1.0.0"
      required: false
      description: If not provided use latest api version as default
    x-timestamp:
      in: header
      name: timestamp
      schema:
        type: string
        example: "2022-12-04T18:01:07+00:00"
      required: true
      description: Timestamp of request when it was sent , ideally it should be GMT
    x-hmac:
      in: header
      name: x-hmac
      schema:
        type: string
        example: "bd4a82cd319ababe57d0a822049ae8985029f82237509d3f091c82cbc7a6945c"
      required: true
      description: Signature created in combination of {payload}+{x-timestamp:}+{x-sender-id}.This is usually encrypted string using HMAC-SHA-256 algorithm with the private key.
    x-registry-type:
      in: header
      name: x-registry-type
      schema:
        type: string
        enum: ['x-mosip','x-farmer','x-social','x-crvs','x-student']
      required: true
      description: This param used to decide which service to be called to retrieve data
    x-sender-id:
      in: header
      name: x-sender-id
      schema:
        type: string
        example: 'SP_SYSTEM_1'
      required: true
      description: Information about requester , it may be some code of SP system
    x-message-id:
      in: header
      name: x-message-id
      schema:
        type: string
        format: uuid
        example: 0c96614c-7255-4774-b109-cd53ee859000
      required: true
      description: UUID string to be sent in request header for tracking of request
    x-async:
      in: header
      name: x-async
      schema:
        type: string
        example: true
      required: true
      description: Async param indicate that response to be sent immediate or in call back, if _true_ send data in response if _false_ just return HTTP status 202
    x-callbackendpoint:
      in: header
      name: x-callbackendpoint
      schema:
        type: string
        example: "https://{server_url}/notify"
      required: false
      description: If async response requested then this param to be supplied for receiving data in SP system, this is usually endpoint active in SP env
  schemas:
    ApiResponse:
      type: object
      properties:
        success:
          type: string
        return_message:
          type: string
        error_code:
          type: string
        transaction_id:
          type: string
          example: 0c96614c-7255-4774-b109-cd53ee859000
          description: The transaction_id received in request
    AuthRequest:
      type: object
      properties:
        client_id:
          type: string
          example: 2fd153ab-86c8-45fb-990d-851840e46061
          description: The client id provided to SP system
        client_secret_key:
          type: string
          example: 8636abe2-bdfb-4238-8bff-200ed3652d1e
          description: The secret token provided along with client id
        grant_type:
          type: string
          example: 'client_credentials'
        scope:
          $ref: '#/components/schemas/OidcScope'
    LoginRequest:
      type: object
      properties:
        username:
          type: string
          example: spuser1
          description: Username of SP system
        password:
          type: string
          example: "Encrypted string"
          description: Encrypted password string
        spmisid:
          type: string
          example: spmis
          description: SPMIS identification string
        client_id:
          type: string
          example: 2fd153ab-86c8-45fb-990d-851840e46061
          description: The client id provided to SP system
        scope: 
          $ref: '#/components/schemas/OidcScope'
        grant_type:
          type: string
          enum: [password]
          example: 'password'
        client_secret_key:
          type: string
          example: 8636abe2-bdfb-4238-8bff-200ed3652d1e
          description: The secret token provided along with client id
    AuthResponse:
      type: object
      properties:
        client_id:
          type: string
          example: 2fd153ab-86c8-45fb-990d-851840e46061
          description: The client id provided to SP system
        tokenInfo:
          $ref: '#/components/schemas/TokenInfo'
    LoginResponse:
      type: object
      properties:
        username:
          type: string
          example: 2fd153ab-86c8-45fb-990d-851840e46061
          description: The client id provided to SP system
        tokenInfo:
          $ref: '#/components/schemas/TokenInfo'
    GenerateOTPResponse:
      type: object
      properties:
        success:
          type: boolean
          enum: [true,false] 
        return_message:
          type: string
          example: 'OTP generated successfully and sent on mobile number ending with XXXX'
        transaction_id:
          type: string
          example: 0c96614c-7255-4774-b109-cd53ee859000
          description: The transaction_id received in request          
    OidcScope:
      type: string
      description: 'The scope attribute provide a way to limit the amount of access that is granted to an access token '
      example: 'search'
      items:
        enum:
          - search
          - auth
          - login
          - subscribe
          - unsubscribe
          - ekyc.sendotp
          - ekyc.validateotp
          - ekyc.demographic
          - ekyc.biometric.fingureprint
          - ekyc.biometric.iris
          - ekyc.biometric.face
    TokenInfo:
      type: object
      properties:
        access_token:
          type: string
          description: 'Base64 encoded string - JWT token'
          example: 'eyJhbGciOiJSUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICJNNU9XZ1BZLWJ6ekxxS2dib2QxM0lra05lbXNhUWJNQzd3bXdacVVob3kwIn0.eyJleHAiOjE2ODM3NjgxNDIsImlhdCI6MTY4Mzc2Nzg0MiwianRpIjoiYjkzZDExNmItZWUwOS00Y2NkLTk5YzAtYzllNjU0ZWZjYTQ4IiwiaXNzIjoiaHR0cDovL2tleWNsb2FrOjgwODAvcmVhbG1zL3NwbWlzIiwiYXVkIjoiYWNjb3VudCIsInN1YiI6Ijg1MTRjMDljLWYyMmMtNDU2Mi1hYTY0LWQyNDYzZTg1NTk1ZSIsInR5cCI6IkJlYXJlciIsImF6cCI6InNwbWlzIiwic2Vzc2lvbl9zdGF0ZSI6IjFmNzQ4YjdiLWU3NmQtNGQ2Yi05M2MxLWVjZjhmM2Q4Y2Q2NiIsImFjciI6IjEiLCJyZWFsbV9hY2Nlc3MiOnsicm9sZXMiOlsib2ZmbGluZV9hY2Nlc3MiLCJkZWZhdWx0LXJvbGVzLXNwbWlzIiwidW1hX2F1dGhvcml6YXRpb24iXX0sInJlc291cmNlX2FjY2VzcyI6eyJhY2NvdW50Ijp7InJvbGVzIjpbIm1hbmFnZS1hY2NvdW50IiwibWFuYWdlLWFjY291bnQtbGlua3MiLCJ2aWV3LXByb2ZpbGUiXX19LCJzY29wZSI6ImVtYWlsIHByb2ZpbGUiLCJzaWQiOiIxZjc0OGI3Yi1lNzZkLTRkNmItOTNjMS1lY2Y4ZjNkOGNkNjYiLCJlbWFpbF92ZXJpZmllZCI6ZmFsc2UsIm5hbWUiOiJhZG1pbiBhZG1pbiIsInByZWZlcnJlZF91c2VybmFtZSI6ImFkbWluIiwiZ2l2ZW5fbmFtZSI6ImFkbWluIiwiZmFtaWx5X25hbWUiOiJhZG1pbiJ9.lqVRcrJzFZSCFi9Gl4usBknH2eW252Qa8QUWEnmhSkOGl8W7FYN2ro2wruSi3F4cGcPRPADzXFhFGD-Wp3BfOLGzzI7i6x1wAVBhD1AMJN1mXlU0kyrNk_x-UYAsR1jIGhybHpNlqyeG0ao9aa0Aq-MiykZ3n3MA1I_LjxRvl0aQixq-2AkZr773u5vVcYtleXGHe8me8ImUsbGSeD2SkxlkiG7r1XMLKP9MTzDyohABwSY7kVrVE3kXkyr15uKb5V-siWwqTwL9YOqonxHvo-7ji31rsCCgDh9Rs9TpG1e-JKXXoGYq87_3iU0L5iC6e2GddLDLZCI_c7KSGh9Szg'
        expires_in:
          type: number
          example: 300
          description: Validity of access_token  in seconds
        refresh_expires_in:
          type: string
          description: Validity of refresh_token  in seconds
          example: 1800
        refresh_token:
          type: string
          example: 'eyJhbGciOiJIUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICI3NWQzNGVmZi1lMTYxLTQ0NTMtYjE1Zi01ODkxZDA2MGJlOWEifQ.eyJleHAiOjE2ODM3Njk2NDIsImlhdCI6MTY4Mzc2Nzg0MiwianRpIjoiYzg5M2YwYWUtNmYwOS00OGYzLThjMzAtMjQ2NGI5MWM1ZmUwIiwiaXNzIjoiaHR0cDovL2tleWNsb2FrOjgwODAvcmVhbG1zL3NwbWlzIiwiYXVkIjoiaHR0cDovL2tleWNsb2FrOjgwODAvcmVhbG1zL3NwbWlzIiwic3ViIjoiODUxNGMwOWMtZjIyYy00NTYyLWFhNjQtZDI0NjNlODU1OTVlIiwidHlwIjoiUmVmcmVzaCIsImF6cCI6InNwbWlzIiwic2Vzc2lvbl9zdGF0ZSI6IjFmNzQ4YjdiLWU3NmQtNGQ2Yi05M2MxLWVjZjhmM2Q4Y2Q2NiIsInNjb3BlIjoiZW1haWwgcHJvZmlsZSIsInNpZCI6IjFmNzQ4YjdiLWU3NmQtNGQ2Yi05M2MxLWVjZjhmM2Q4Y2Q2NiJ9.84cZJ-RYVYukbW64-fU72jSrG3VphUoaMxXtP0Uyodo'
          description: 'Refresh token string value'
        token_type:
          type: string
          enum: [Bearer]
        session_state:
          type: string
          description: 'Used to track session '
          example: '1f748b7b-e76d-4d6b-93c1-ecf8f3d8cd66'
        scope: 
          $ref: '#/components/schemas/OidcScope'
    SendOTPRequest:
      allOf: 
        - $ref: '#/components/schemas/IdentifierType'
        - $ref: '#/components/schemas/IdentifierValue'    
      type: object
      properties:
        scope: 
          $ref: '#/components/schemas/OidcScope'
        grant_type:
          type: string
          enum: [otp]
        registered_contact_no:
          type: string
          example: +61-7894561231
    ValidateOTPRequest:
      type: object
      properties:
        otp:
          type: string
          example: 051283
        transaction_id:
          type: string
          example: 0c96614c-7255-4774-b109-cd53ee859000
          description: The transaction_id received in which OTP was generated        
    IdentifierType:
      type: object
      properties:
        identifier_type:
          type: string
          enum: ['NATIONAL_ID','FARMER_REG_NO']
    IdentifierValue:
      type: object
      properties:
        identifier_value:
          type: string
          example: 345678912
    HttpErrorResponse:
      description: HTTP layer error details
      properties:
        error_code:
          type: string
        error_message:
          type: string
  securitySchemes:
    spmis_auth:            # arbitrary name for the security scheme
      type: http
      scheme: bearer
      bearerFormat: JWT