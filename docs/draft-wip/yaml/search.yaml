components:
  schemas:
    SearchCriteria:
      type: object
      properties:
        name:
          type: string
          example: ''
        given_name:
          type: string
          example: ''
        family_name:
          type: string
          example: ''
        middle_name:
          type: string
          example: ''
        gender:
          type: string
          example: ''
        birthdate:
          type: string
          example: ''
        place_of_birth:
          type: string
          example: ''
        status:
          type: string
          example: ''
        nationality:
          type: string
          example: ''
        attributes:
          type: array
          items:
            anyOf:
              - $ref: './common.yaml#/components/schemas/Attribute'

    ExpressionAnd:
      type: object
      properties:
        expression:
          type: string
          enum: [and]
        
    NameField:
      description: 'Search by name'        
      allOf: 
        - type: object
          required:
            - fieldname
            - value
          properties: 
            fieldname:
              type: string
              example: ''
              enum: ['firstname']
            operator:
              $ref: '#/components/schemas/FieldOperator'
            value: 
              type: string
              example: ''
              description: 'Search by firstname'
 
    Repositories: 
      type: object
      required:
        - fieldname
        - value
      properties: 
        fieldname:
          type: string
          example: ''
          enum: ['repository_type']
        operator:
          $ref: '#/components/schemas/FieldOperator'
        value: 
          type: string
          example: ''
          enum: ['Birth', 'Death', 'Marriage']
          description: 'Search by repository_type type'
    FieldOperator:
      type: string
      enum:
        - eq
        - not eq
        - lt
        - gt
    SearchResponseMessage:
      type: object
      properties:
        transaction_id:
          $ref : './common.yaml#/components/schemas/TransactionId'
        search_response:
          type: object
          properties:
            version:
              $ref: './common.yaml#/components/schemas/Version'
            data: 
              type: array
              items:
                $ref: '#/components/schemas/SearchResponseObject'
 
    SearchResponseObject:
      type: object
      properties:
        reference_id:
          $ref : './common.yaml#/components/schemas/ReferenceId'
        timestamp:
          $ref : './common.yaml#/components/schemas/TimeStamp'          
        status:
          $ref: "./common.yaml#/components/schemas/RequestStatus"
        status_reason_code:
          $ref: "./common.yaml#/components/schemas/SearchStatusReasonCode"
        status_reason_message:
          description: Status reason code message. Helps actionanble messaging for
            systems/end users
          type: string
          maxLength: 999
        registry_type:
          $ref: "./common.yaml#/components/schemas/RegistryType"
        event_type:
          anyOf:
          - description: Functional registry event types
            type: string
            enum:
            - read
          - $ref: "./common.yaml#/components/schemas/CREventType"        
        registry_data:
          items:
            oneOf:
            - "$ref": "./common.yaml#/components/schemas/Person"
            - "$ref": "./common.yaml#/components/schemas/CRRecordBirth"
            - "$ref": "./common.yaml#/components/schemas/CRRecordDeath"
            - "$ref": "./common.yaml#/components/schemas/CRRecordUnion"
            - "$ref": "./common.yaml#/components/schemas/RegistryRecord"
#        beneficiary: 
#          type: array
#          items:
#            anyOf:
#              - $ref: '#/components/schemas/Person'
#              - $ref: '#/components/schemas/PersonWithVitalInfo'
#              - $ref: '#/components/schemas/PersonWithVitalEventsDetails'              
#              - $ref: '#/components/schemas/MarriageInfo' 
        pagination:
          $ref: './common.yaml#/components/schemas/PaginationInfoInResponse'
        locale:
          $ref: './common.yaml#/components/schemas/Locale'
      required:
        - reference_id           
        - query
        - timestamp    
        - beneficiary           
        - pagination
        - locale                  
