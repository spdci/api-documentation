openapi: 3.0.3
info:
  title: CRVS interoperability APIs
  description: |-
    The CRVS interoperability APIs describes different APIs some of them are usecase specific and other are generalized APIs to perform interoperable operations between CRVS registry and SP system.
    You can now help us improve the API whether it's by making changes to the definition itself or to the code.
    That way, with time, we can improve the API in general, and expose some of the new features in upcoming version.

    `Search API > ` The Search API provides functionality to search based on demographic, identifiers and custom query

    `Event subscription > ` The Event subscription APIs describe APIs useful to subscribe / unsubscribe events. When any event happens in crvs registry it sends event details on notify end point
    
    `Request status checking API > ` The request status checking APIs implement to check status of request sent in any above APIs
    
    Gitbook reference link:
    - [CRVS - V1.0 ](https://app.gitbook.com/o/0iSqNDBWH70sLmGExne0/s/qxauqL1oEtZWtHYd2Uzz/dci/readme)

    Code directory links:
    - [Identifiers](Links to be updated)
          
    - [Marital Status](Links to be updated)
          
    - [Sex](Links to be updated)
          
    - [Events types](Links to be updated)   
    
    Each request build up of three section 
    - Signature 
    - headers 
    - message
  version: 1.0.0
servers:
  - description: API host endpoint
    url: https://apihost
tags:
  - name: Search API
    description: 'The Search API section includes /search and /on-search end points ' 
  - name: Event subscription
    description: 'The event subscription section describes APIs of subscribe / unsubscribe / subscription-list / notify'
  - name: Request status
    description: '.'
  - name: SearchRequest
    x-displayName: SearchRequest
    description: |
      <SchemaDefinition schemaRef="#/components/schemas/SearchRequest" />    
  - name: SearchResponse
    x-displayName: SearchResponse
    description: |
      <SchemaDefinition schemaRef="#/components/schemas/SearchResponse" />
  - name: SubscriptionRequest
    x-displayName: SubscriptionRequest
    description: |
      <SchemaDefinition schemaRef="#/components/schemas/SubscriptionRequest" />
  - name: SubscriptionResponse
    x-displayName: SubscriptionResponse
    description: |
      <SchemaDefinition schemaRef="#/components/schemas/SubscriptionResponse" />
  - name: UnSubscribeRequest
    x-displayName: UnSubscribeRequest
    description: |
      <SchemaDefinition schemaRef="#/components/schemas/UnSubscribeRequest" /> 
  - name: UnSubscribeResponse
    x-displayName: UnSubscribeResponse
    description: |
      <SchemaDefinition schemaRef="#/components/schemas/UnSubscribeResponse" /> 
  - name: RequestStatusCheckRequest
    x-displayName: RequestStatusCheckRequest
    description: |
      <SchemaDefinition schemaRef="#/components/schemas/RequestStatusCheckRequest" /> 
  - name: EventNotificationRequest
    x-displayName: EventNotificationRequest
    description: |
      <SchemaDefinition schemaRef="#/components/schemas/EventNotificationRequest" /> 
  - name: EventResponse
    x-displayName: EventResponse
    description: |
      <SchemaDefinition schemaRef="#/components/schemas/EventResponse" />                        
x-tagGroups:
  - name: API Definition
    tags:
      - Search API
      - Event subscription
      - Request status

  - name: Schema Objects
    tags:
      - SearchRequest
      - SearchResponse 
      - SubscriptionRequest
      - SubscriptionResponse
      - UnSubscribeRequest
      - UnSubscribeResponse
      - RequestStatusCheckRequest
      - EventNotificationRequest
      - EventResponse   


paths:
  /search:
    post:
      tags:
        - Search API
      summary: 'Search request: /search'
      description: |-
       The search request build up of three section 
       <br>1) Signature 
       <br>2) headers 
       <br>3) message
 
      parameters:
        - $ref: "./headers.yaml#/components/parameters/authorization"
      requestBody:
        description: Search request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchRequest' 
          application/xml:
            schema:
              $ref: '#/components/schemas/SearchRequest'                   
          multipart/form-data:
            schema:
              $ref: './common.yaml#/components/schemas/FileUploadRequest'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchResponse'          
            application/xml:
              schema:
                $ref: '#/components/schemas/SearchResponse'
            application/octet-stream:
              schema:
                type: string
                format: binary                
        '201':
          $ref: './responses.yaml#/components/responses/201'
        '202':
          $ref: './responses.yaml#/components/responses/202'
        '400':
          $ref: './responses.yaml#/components/responses/400'
        '401':
          $ref: './responses.yaml#/components/responses/401'
        '403':
          $ref: './responses.yaml#/components/responses/403'
        '404':
          $ref: './responses.yaml#/components/responses/404'
        '405':
          $ref: './responses.yaml#/components/responses/405'
        '500':
          $ref: './responses.yaml#/components/responses/500' 
      security:
        - x-access-token:
            - read:search
  /on-search:
    post:
      tags:
        - Search API 
      summary: 'Search request call back: /on-search'
      description: The requester will pass information submitted in search and if response prepared then it will send content
      parameters:
        - $ref: "./headers.yaml#/components/parameters/authorization"
      requestBody:
        description: Search response to SP system
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchResponse'
          application/xml:
            schema:
              $ref: '#/components/schemas/SearchResponse'
          multipart/form-data:
            schema:
              $ref: './common.yaml#/components/schemas/FileUploadRequest'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: './responses.yaml#/components/schemas/ApiResponse'          
            application/xml:
              schema:
                $ref: './responses.yaml#/components/schemas/ApiResponse'
        '201':
          $ref: './responses.yaml#/components/responses/201'
        '202':
          $ref: './responses.yaml#/components/responses/202'
        '400':
          $ref: './responses.yaml#/components/responses/400'
        '401':
          $ref: './responses.yaml#/components/responses/401'
        '403':
          $ref: './responses.yaml#/components/responses/403'
        '404':
          $ref: './responses.yaml#/components/responses/404'
        '405':
          $ref: './responses.yaml#/components/responses/405'
        '500':
          $ref: './responses.yaml#/components/responses/500' 

      security:
        - x-access-token:
            - read:search
  /subscription-list:
    get:
      tags:
        - Event subscription 
      summary: 'Event list: /subscription-list'
      parameters:
        - $ref: "./headers.yaml#/components/parameters/authorization"
      description: ''
      operationId: ''
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema: 
                $ref: "./common.yaml#/components/schemas/CREventType"
#                type: array
#                example: ["BIRTH_REGISTRATION", "DEATH_REGISTRATION","MARRIAGE_REGISTRATION","DIVORCE_REGISTRATION","DEMOGRAPHIC_UPDATE"]
#                items:
#                  type: string     
      security:
        - x-access-token:
            - read:search
  /subscribe:
    post:
      tags:
        - Event subscription  
      summary: 'Subscribe: /subscribe'
      description: Response will contain details of subscription
      operationId: ''
      parameters:
        - $ref: "./headers.yaml#/components/parameters/authorization"
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: './subscriptions.yaml#/components/schemas/SubscriptionRequest'     
          application/xml:
            schema:
              $ref: './subscriptions.yaml#/components/schemas/SubscriptionRequest'
          multipart/form-data:
            schema:
              $ref: './common.yaml#/components/schemas/FileUploadRequest'
        required: true
      responses:
        'default':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: './subscriptions.yaml#/components/schemas/SubscriptionResponse'     
            application/xml:
              schema:
                $ref: './subscriptions.yaml#/components/schemas/SubscriptionResponse'
            application/octet-stream:
              schema:
                type: string
                format: binary                
        '400':
          $ref: './responses.yaml#/components/responses/400'
        '401':
          $ref: './responses.yaml#/components/responses/401'
        '403':
          $ref: './responses.yaml#/components/responses/403'
        '404':
          $ref: './responses.yaml#/components/responses/404'
        '405':
          $ref: './responses.yaml#/components/responses/405'
        '500':
          $ref: './responses.yaml#/components/responses/500' 
             
      security:
        - x-access-token:
            - read:search
  /unsubscribe:
    post:
      tags:
        - Event subscription  
      summary: 'Unsubscribe: /unsubscribe'
      description: 'To un-subscribe for events'
      operationId: ''
      parameters:
        - $ref: "./headers.yaml#/components/parameters/authorization"
      requestBody:
        description: 'Request to un-subscribe'
        content:
          application/json:
            schema:
              $ref: './subscriptions.yaml#/components/schemas/UnSubscribeRequest'     
          application/xml:
            schema:
              $ref: './subscriptions.yaml#/components/schemas/UnSubscribeRequest'     
          multipart/form-data:
            schema:
              $ref: './common.yaml#/components/schemas/FileUploadRequest'
        required: true
      responses:
        
        'default':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: './subscriptions.yaml#/components/schemas/UnSubscribeResponse'     
            application/xml:
              schema:
                $ref: './subscriptions.yaml#/components/schemas/UnSubscribeResponse'
            application/octet-stream:
              schema:
                type: string
                format: binary                
        '400':
          $ref: './responses.yaml#/components/responses/400'
        '401':
          $ref: './responses.yaml#/components/responses/401'
        '403':
          $ref: './responses.yaml#/components/responses/403'
        '404':
          $ref: './responses.yaml#/components/responses/404'
        '405':
          $ref: './responses.yaml#/components/responses/405'
        '500':
          $ref: './responses.yaml#/components/responses/500'             
      security:
        - x-access-token:
            - read:search
  /notify:
    post:
      tags:
        - Event subscription
      summary: Event notification (to SP system) /notify
      description: 'The notify end point to be implemented at subscriber system. The registry will send event data on this end point.'
      parameters:
        - $ref: "./headers.yaml#/components/parameters/authorization"
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventNotificationRequest'     
          application/xml:
            schema:
              $ref: '#/components/schemas/EventNotificationRequest'
          multipart/form-data:
            schema:
              $ref: './common.yaml#/components/schemas/FileUploadRequest'
        required: true
      responses:
        'default':
          description: Acknowledgement from receiver
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventResponse'     
            application/xml:
              schema:
                $ref: '#/components/schemas/EventResponse'
            application/octet-stream:
              schema:
                type: string
                format: binary                
        '400':
          $ref: './responses.yaml#/components/responses/400'
        '401':
          $ref: './responses.yaml#/components/responses/401'
        '403':
          $ref: './responses.yaml#/components/responses/403'
        '404':
          $ref: './responses.yaml#/components/responses/404'
        '405':
          $ref: './responses.yaml#/components/responses/405'
        '500':
          $ref: './responses.yaml#/components/responses/500'                  
      security:
        - x-access-token:
            - read:search
  /status:
    post:
      tags:
        - Request status
      summary: ''
      description: ''
      operationId: ''
      parameters:
        - $ref: "./headers.yaml#/components/parameters/authorization"
      requestBody:
        description: 'Request to un-subscribe'
        content:
          application/json:
            schema:
              $ref: './req-status.yaml#/components/schemas/RequestStatusCheckRequest'
          application/xml:
            schema:
              $ref: './req-status.yaml#/components/schemas/RequestStatusCheckRequest'                   
          multipart/form-data:
            schema:
              $ref: './common.yaml#/components/schemas/FileUploadRequest'
        required: true
      responses:
        'default':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: './req-status.yaml#/components/schemas/RequestStatusCheckResponse'     
            application/xml:
              schema:
                $ref: './req-status.yaml#/components/schemas/RequestStatusCheckResponse'
            application/octet-stream:
              schema:
                type: string
                format: binary                

        '400':
          $ref: './responses.yaml#/components/responses/400'
        '401':
          $ref: './responses.yaml#/components/responses/401'
        '403':
          $ref: './responses.yaml#/components/responses/403'
        '404':
          $ref: './responses.yaml#/components/responses/404'
        '405':
          $ref: './responses.yaml#/components/responses/405'
        '500':
          $ref: './responses.yaml#/components/responses/500'             
      security:
        - x-access-token:
            - read:search
  /on-status:
    post:
      tags:
        - Request status
      summary: ''
      description: ''
      operationId: ''
      parameters:
        - $ref: "./headers.yaml#/components/parameters/authorization"
      requestBody:
        description: 'Request to un-subscribe'
        content:
          application/json:
            schema:
              $ref: './req-status.yaml#/components/schemas/RequestStatusCheckResponse'     
          application/xml:
            schema:
              $ref: './req-status.yaml#/components/schemas/RequestStatusCheckResponse' 
          multipart/form-data:
            schema:
              $ref: './common.yaml#/components/schemas/FileUploadRequest'
        required: true
      responses:
        'default':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OnStatusResponse'     
            application/xml:
              schema:
                $ref: '#/components/schemas/OnStatusResponse'
        '400':
          $ref: './responses.yaml#/components/responses/400'
        '401':
          $ref: './responses.yaml#/components/responses/401'
        '403':
          $ref: './responses.yaml#/components/responses/403'
        '404':
          $ref: './responses.yaml#/components/responses/404'
        '405':
          $ref: './responses.yaml#/components/responses/405'
        '500':
          $ref: './responses.yaml#/components/responses/500'             
      security:
        - x-access-token:
            - read:search

components:
  schemas:  
    SearchRequest:
      type: object
      properties:
        signature:
          allOf:
            - $ref: './signature.yaml#/components/schemas/MsgSignature'      
        headers:
          allOf:
            - $ref: './headers.yaml#/components/schemas/CommonHeaders'
            - $ref: './headers.yaml#/components/schemas/SearchAction'
            - $ref: './headers.yaml#/components/schemas/TotalCountHeader'
            - $ref: './headers.yaml#/components/schemas/EncHeaders'   
            - $ref: './headers.yaml#/components/schemas/AsyncHeaders'    
            - $ref: './headers.yaml#/components/schemas/SearchCallbackHeader'   
        message:
          type: object
          description: 'The search data using which search to be performed'
          anyOf:
            - $ref: '#/components/schemas/SearchMessage'
            - $ref: './common.yaml#/components/schemas/EncryptedRequest'
      required: 
        - headers
        - message
    SearchMessage:
      type: object
      properties:
        transaction_id:
          $ref : './common.yaml#/components/schemas/TransactionId'
        search_request:
          type: object
          properties:
            version:
              $ref: './common.yaml#/components/schemas/Version'
            data: 
              type: array
              items:
                $ref: '#/components/schemas/SearchRequestObject'
          required: 
            - version
            - search_request          
      required: 
        - transaction_id
        - search_request
    
    SearchRequestObject:
      type: object
      properties:
        reference_id:
          $ref : './common.yaml#/components/schemas/ReferenceId'
        timestamp:
          $ref : './common.yaml#/components/schemas/TimeStamp'          
        registry_type:
          $ref : './common.yaml#/components/schemas/RegistryType'
        event_type:
          $ref: "./common.yaml#/components/schemas/CREventType"
        search_criteria:
          type: object
          properties:
            query:
              anyOf:
              - $ref: "./common.yaml#/components/schemas/RegistryRecord"
              - $ref: "./common.yaml#/components/schemas/CRRecordBirth"
              - $ref: "./common.yaml#/components/schemas/CRRecordDeath"
              - $ref: "./common.yaml#/components/schemas/CRRecordUnion"
            custom_query:
              $ref: "common.yaml#/components/schemas/ExpressionWithConditionList" 
        filter:
          description: Attribute(s) to send in response, 
          items:
            type: string
          example: ''                       
        sort:
          $ref: './common.yaml#/components/schemas/SearchSortList'
        pagination:
          $ref: "./common.yaml#/components/schemas/PaginationRequest"
        locale:
          $ref: './common.yaml#/components/schemas/Locale'
#        filter: 
#          type: string
#          example: ''
#          enum: ['person_info','is_alive','marital_status','birth_info','marriage_registration','divorce_registration','death_info','parent_info','vital_event_dates','vital_events_info']
      required: 
        - reference_id
        - timestamp
        - registry_type
        - search_criteria
        - filter  
    EventResponse:
      type: object
      properties:
        signature: 
          $ref: './signature.yaml#/components/schemas/MsgSignature'
        headers:
          allOf:
            - $ref: './headers.yaml#/components/schemas/CommonHeaders' 
            - $ref: './headers.yaml#/components/schemas/EncHeaders'          
        message:
          type: object
          anyOf:
            - $ref: './responses.yaml#/components/schemas/ApiResponseMessage'
            - $ref: './common.yaml#/components/schemas/EncryptedRequest' 
    OnStatusResponse:
      type: object
      properties:
        signature: 
          $ref: './signature.yaml#/components/schemas/MsgSignature'
        headers:
          allOf:
            - $ref: './headers.yaml#/components/schemas/CommonHeaders' 
            - $ref: './headers.yaml#/components/schemas/EncHeaders'          
        message:
          type: object
          anyOf:
            - $ref: './responses.yaml#/components/schemas/ApiResponseMessage'
            - $ref: './common.yaml#/components/schemas/EncryptedRequest'          
    SearchResponse:
      type: object
      properties:
        signature:
          allOf:
            - $ref: './signature.yaml#/components/schemas/MsgSignature'      
        headers:
          allOf:
            - $ref: './headers.yaml#/components/schemas/CommonHeaders'
            - $ref: './headers.yaml#/components/schemas/OnSearchAction'
            - $ref: './headers.yaml#/components/schemas/TotalCountHeader'
            - $ref: './headers.yaml#/components/schemas/CompletedCountHeader'  
            - $ref: './headers.yaml#/components/schemas/EncHeaders' 
            - $ref: './headers.yaml#/components/schemas/AsyncHeaders'    
            - $ref: './headers.yaml#/components/schemas/SearchCallbackHeader'
        message: 
          type: object
          description: ''
          anyOf:
            - $ref: './search.yaml#/components/schemas/SearchResponseMessage'
            - $ref: './common.yaml#/components/schemas/EncryptedRequest' 
      required:
        - headers
        - message
    EventNotificationRequest:
      type: object
      properties:
        signature:
          allOf:
            - $ref: './signature.yaml#/components/schemas/MsgSignature'      
        headers:
          allOf:
            - $ref: './headers.yaml#/components/schemas/CommonHeaders' 
            - $ref: './headers.yaml#/components/schemas/NotifyAction'
            - $ref: './headers.yaml#/components/schemas/TotalCountHeader'
            - $ref: './headers.yaml#/components/schemas/CompletedCountHeader'
            - $ref: './headers.yaml#/components/schemas/EncHeaders'   
        message:
          type: object 
          anyOf:
            - $ref: '#/components/schemas/EventNotificationMessage'
            - $ref: './common.yaml#/components/schemas/EncryptedRequest'
        
      required:
        - headers
        - message
    EventNotificationMessage:
      properties:
        transaction_id:
          $ref : "./common.yaml#/components/schemas/TransactionId"
        notify_event:
          type: array
          items:
            $ref: './subscriptions.yaml#/components/schemas/NotifyEventRequest'                            
      required:
        - transaction_id
        - notify_event

            
  securitySchemes:
    x-access-token:
      type: http
      scheme: bearer
      bearerFormat: jwt
      description: Authenticating using session token issued by platform/system API gateway or auth services issuing session token APIs using client id & secret      
